/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tvondemand;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Scrollbar;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable.PrintMode;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import java.util.Date;
import java.text.SimpleDateFormat;

/**
 *
 * @author Μαλβίνα
 */
public class CustomerMenu extends javax.swing.JFrame  {

    public String username;
    public String subs_type;
    public int cust_id;
    public String film_id;
    public String series_id;
    public String sep_count;
    public String ctype;
    public String c_act;
    /**
     * Creates new form MenuCustomer
     */
    public CustomerMenu() {
          initComponents();
    }
    
    public CustomerMenu(String user, String sub_type) {
          initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        username= user;
        subs_type=sub_type;
        
        try{                                                                    // enimerwnei ton pinaka user me to email tou trexontos xristi
          Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");   
         String sqli = "update user set username=? where user_id=1";    
         PreparedStatement psti=con.prepareStatement(sqli);
         psti.setString(1,username);
         psti.execute();}
          catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */   
  
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        logout = new javax.swing.JButton();
        viewaccount = new javax.swing.JButton();
        rentalhistory = new javax.swing.JButton();
        availablecontent = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        makerental = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        logout.setBackground(new java.awt.Color(0, 51, 51));
        logout.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Log out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        viewaccount.setBackground(new java.awt.Color(0, 51, 51));
        viewaccount.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        viewaccount.setForeground(new java.awt.Color(255, 255, 255));
        viewaccount.setText("Manage/ View Account");
        viewaccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewaccountActionPerformed(evt);
            }
        });

        rentalhistory.setBackground(new java.awt.Color(0, 51, 51));
        rentalhistory.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        rentalhistory.setForeground(new java.awt.Color(255, 255, 255));
        rentalhistory.setText("View Rental History");
        rentalhistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentalhistoryActionPerformed(evt);
            }
        });

        availablecontent.setBackground(new java.awt.Color(0, 51, 51));
        availablecontent.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        availablecontent.setForeground(new java.awt.Color(255, 255, 255));
        availablecontent.setText("View Available Content");
        availablecontent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availablecontentActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(0, 51, 51));
        jTextField1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 34)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("   Welcome! What do you want to do next?");
        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setBackground(new java.awt.Color(0, 153, 153));
        jTextField2.setFont(new java.awt.Font("Bauhaus 93", 2, 14)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setText("TVonDemand");
        jTextField2.setBorder(null);

        makerental.setBackground(new java.awt.Color(0, 51, 51));
        makerental.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        makerental.setForeground(new java.awt.Color(255, 255, 255));
        makerental.setText("Make a Rental");
        makerental.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makerentalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 628, Short.MAX_VALUE)
                        .addComponent(logout)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(viewaccount)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rentalhistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(availablecontent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                                .addComponent(makerental, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)))
                        .addContainerGap(35, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(availablecontent, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(makerental, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(rentalhistory, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {                                       
        Login login= new Login();
        login.setVisible(true);
        setVisible(false);
    }                                      

    private void viewaccountActionPerformed(java.awt.event.ActionEvent evt) {                                            

         try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");   
            String sql= "Select * from customer where email like ?";
          
            PreparedStatement pst=con.prepareStatement(sql);
            pst.setString(1,username);
            ResultSet rs= pst.executeQuery(); 
            
            String columns[] = { "Customer_ID", "First_Name", "Last_Name","Email","Address_ID","Active", "Create_Date","Subscription_Type" };
            String data[][] = new String[1][8];
    
         while (rs.next()) {
        int id = rs.getInt("customer_id");
        String first_name = rs.getString("first_name");
        String last_name = rs.getString("last_name");
        String email = rs.getString("email");
        int address_id = rs.getInt("address_id");
        int active = rs.getInt("active");
        String create_date = rs.getString("create_date");
        String sub_type = rs.getString("subscription_type");
        data[0][0] = id + "";
        data[0][1] = first_name;
        data[0][2] = last_name;
        data[0][3] = email;
        data[0][4] = address_id + "";
        data[0][5] = active + "";
        data[0][6] = create_date;
        data[0][7] = sub_type;
      }
         
      DefaultTableModel model = new DefaultTableModel(data, columns);
      JTable table = new JTable(model);                
      table.getTableHeader().setReorderingAllowed(false); 
      table.setDefaultEditor(Object.class, null);                               // kanei ton pinaka mi-editible
      table.getColumnModel().getColumn(0).setPreferredWidth(85);
      table.getColumnModel().getColumn(1).setPreferredWidth(175);
      table.getColumnModel().getColumn(2).setPreferredWidth(200);
      table.getColumnModel().getColumn(3).setPreferredWidth(250);
      table.getColumnModel().getColumn(6).setPreferredWidth(150);
      table.getColumnModel().getColumn(7).setPreferredWidth(125);
      table.setPreferredScrollableViewportSize(table.getPreferredSize());
      table.setShowGrid(true);
      table.setShowVerticalLines(true);
      JScrollPane pane = new JScrollPane(table);
      JFrame f = new JFrame("Customer_Account");
      JPanel panel = new JPanel();
      panel.add(pane);
      f.add(panel);
      f.setSize(1500, 150);
      f.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f.setLocation(size.width/6-getWidth()/4,size.height/2-getHeight()/2);
        
         table.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
             if(e.getClickCount() ==2)
             {try{
               JTable jtable = (JTable)e.getSource();  
               switch(jtable.getSelectedColumn()){
                   case 1:                                                      // update sto onoma
                      String cname= JOptionPane.showInputDialog(null, "Enter new name: ");
                      if(cname==null)
                      {}
                      else if(cname.length()==0)
                        {JOptionPane.showMessageDialog(null,"Name can't be blank! Cancelling update!");}
                      else{
                      String sql1="update customer set first_name=? where email like ?";
                      PreparedStatement pst1 = con.prepareStatement(sql1);
                      pst1.setString(1,cname);
                      pst1.setString(2,username);
                      pst1.execute();
                      JOptionPane.showMessageDialog(null,"Succesful update!");}
                   break;
                   case 2:                                                      // update to epwnimo
                       String clastname= JOptionPane.showInputDialog(null, "Enter new last name: ");
                      if(clastname==null)
                      {}
                      else if(clastname.length()==0)
                        {JOptionPane.showMessageDialog(null,"Last name can't be blank! Cancelling update!");}
                      else{
                      String sql1="update customer set last_name=? where email like ?";
                      PreparedStatement pst1 = con.prepareStatement(sql1);
                      pst1.setString(1,clastname);
                      pst1.setString(2,username);
                      pst1.execute();
                      JOptionPane.showMessageDialog(null,"Succesful update!");}
                    break; 
                    case 4:                                                     // update tin dieuthinsi
                    String sql2 = "select address_id from address";     
                    PreparedStatement pst2 = con.prepareStatement(sql2);
                    ResultSet rs2 =pst2.executeQuery();
                     
                    int count1=0;
                    while(rs2.next())
                      {count1++;}
                    String columns1[]={"Address_Id"};
                    String data1[][]= new String[count1][1];
                    
                    PreparedStatement pst3 = con.prepareStatement(sql2);
                    ResultSet rs3 =pst3.executeQuery();
                    int i=0;
                    while (rs3.next()) {
                      int add_id = rs3.getInt("address_id");
                      data1[i][0] = add_id + "";
                      i++;}

                    DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
                    JTable table1 = new JTable(model1);                
                    table1.getTableHeader().setReorderingAllowed(false);          
                    table1.setDefaultEditor(Object.class, null);                ///kanei ton pinaka mi-editable
                    table1.setPreferredScrollableViewportSize(table1.getPreferredSize());
                    table1.setShowGrid(true);
                    table1.setShowVerticalLines(true);
                    JScrollPane pane1 = new JScrollPane(table1);
                    JFrame f1 = new JFrame("Select new address id:");
                    JPanel panel1 = new JPanel();
                    panel1.add(pane1);
                    f1.add(panel1);
                    f1.setSize(400, 150);
                    f1.setVisible(true);
                    initComponents();
                    Toolkit toolkit1=getToolkit();
                    Dimension size1= toolkit1.getScreenSize();
                    f1.setLocation(size1.width/2-getWidth()/4,size1.height/2-getHeight()/2);
                       
                    table1.addMouseListener(new MouseAdapter(){
                    public void mouseClicked(MouseEvent e1) {                   // kanei override tis public methodou
                    if(e1.getClickCount() ==2)
                    {try{
                    f1.setVisible(false);
                    JTable jtable1 = (JTable)e1.getSource();  
                    int row= jtable1.getSelectedRow();
                    String cadd_id= (String)jtable1.getValueAt(row,0);
                    
                    String sql1="update customer set address_id=? where email like ?";
                      PreparedStatement pst1 = con.prepareStatement(sql1);
                      pst1.setString(1,cadd_id);
                      pst1.setString(2,username);
                      pst1.execute();
                      JOptionPane.showMessageDialog(null,"Succesful update!");
                    }catch(Exception e){
                    JOptionPane.showMessageDialog(null,e);
                     }    
                    }}});
                    break;    
                    case 5:                                                     // update to active
                    String columns3[]={"Active_Type"};
                    String data3[][]= new String[2][1];
                    data3[0][0]= "0";
                    data3[1][0]="1";
                      
                    DefaultTableModel model3 = new DefaultTableModel(data3, columns3); 
                    JTable table3 = new JTable(model3); 
                    table3.setDefaultEditor(Object.class, null);                // kanei ton pinaka mi-editible
                    table3.getTableHeader().setReorderingAllowed(false);                       
                    table3.setPreferredScrollableViewportSize(table3.getPreferredSize());
                    table3.setShowGrid(true);
                    table3.setShowVerticalLines(true);
                    JScrollPane pane3 = new JScrollPane(table3);
                    JFrame f3 = new JFrame("Choose active type:");
                    JPanel panel3 = new JPanel();
                    panel3.add(pane3);
                    f3.add(panel3);
                    f3.setSize(600, 150);
                    f3.setVisible(true);
                    initComponents();
                    Toolkit toolkit3=getToolkit();
                    Dimension size3= toolkit3.getScreenSize();
                    f3.setLocation(size3.width/2-getWidth()/3,size3.height/2-getHeight()/5);
                      
                     table3.addMouseListener(new MouseAdapter(){                 // mouseListener gia to subscription type
         public void mouseClicked(MouseEvent e3) {                              // kanei override tis public methodou
                    if(e3.getClickCount()==2)
                    {try{
                     f3.setVisible(false);
                    JTable jtable3 = (JTable)e3.getSource();  
                    if(jtable3.getSelectedRow()==0)                             // an dialeksei tipo M
                    {c_act="0";}  
                    else if(jtable3.getSelectedRow()==1)
                     {c_act="1";}
                    
                    String sql1="update customer set active=? where email like ?";
                    PreparedStatement pst1 = con.prepareStatement(sql1);
                    pst1.setString(1,c_act);
                    pst1.setString(2,username);
                    pst1.execute();
                    JOptionPane.showMessageDialog(null,"Succesful update!");}
                    catch(Exception ex){
                    JOptionPane.showMessageDialog(null,ex);
                    } 
                    }}});  
                    break; 
                    case 7:
                    String columns2[]={"Subscription_Type"};
                    String data2[][]= new String[3][1];
                    data2[0][0]= "M";
                    data2[1][0]="MS";
                    data2[2][0]="S";
                    
                    DefaultTableModel model2 = new DefaultTableModel(data2, columns2); 
                    JTable table2 = new JTable(model2); 
                    table2.setDefaultEditor(Object.class, null);                // kanei ton pinaka mi-editible
                    table2.getTableHeader().setReorderingAllowed(false);                       
                    table2.setPreferredScrollableViewportSize(table2.getPreferredSize());
                    table2.setShowGrid(true);
                    table2.setShowVerticalLines(true);
                    JScrollPane pane2 = new JScrollPane(table2);
                    JFrame f2 = new JFrame("Choose subscription type:");
                    JPanel panel2 = new JPanel();
                    panel2.add(pane2);
                    f2.add(panel2);
                    f2.setSize(600, 150);
                    f2.setVisible(true);
                    initComponents();
                    Toolkit toolkit2=getToolkit();
                    Dimension size2= toolkit2.getScreenSize();
                    f2.setLocation(size2.width/2-getWidth()/3,size2.height/2-getHeight()/5);
                    
                    table2.addMouseListener(new MouseAdapter(){                 // mouseListener gia to subscription type
         public void mouseClicked(MouseEvent e1) {                              // kanei override tis public methodou
                    if(e1.getClickCount()==2)
                    {
                     f2.setVisible(false);   
                     JTable jtable2 = (JTable)e1.getSource();  
                    if(jtable2.getSelectedRow()==0)                             // an dialeksei tipo M
                    {ctype="M";}  
                    else if(jtable2.getSelectedRow()==1)                        // an dialeksei tipo MS
                    {ctype="MS";}
                    else if(jtable2.getSelectedRow()==2)                        // an dialeksei tipo MS
                    {ctype="S";}
                     
                    try{
                    String sql1="update customer set subscription_type=? where email like ?";
                      PreparedStatement pst1 = con.prepareStatement(sql1);
                      pst1.setString(1,ctype);
                      pst1.setString(2,username);
                      pst1.execute();
                      JOptionPane.showMessageDialog(null,"Succesful update!");}
                     catch(Exception e){
                    JOptionPane.showMessageDialog(null,e);
                    }    
                    }}});
                    break;    
                    default: 
                        }
               }
                 catch(Exception ex){
                 JOptionPane.showMessageDialog(null,ex);
                } 
              }
           }
         });    
       
    }                                        
    catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    } 
              
    }                                           

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    public String CurrentDatetime(){
     SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
     Date now= new Date();
     String date = sdf.format(now);
     return date;
    }
    
    private void availablecontentActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");  
            String sql= "Select * from film";
            PreparedStatement pst=con.prepareStatement(sql);
            ResultSet rs= pst.executeQuery();
        if(subs_type.equals("M")){                                              // gia tainies
            int count=0;
            while(rs.next())
            {count++;}
            String sql1= "Select * from film";
            PreparedStatement pst1=con.prepareStatement(sql1);
            ResultSet rs1= pst1.executeQuery();       
            String columns1[] = { "Film_ID", "Title", "Description","Release_year","Language_ID","Original_language_ID", "Length","Rating", "Special_features" };
            String data1[][] = new String[count][9];
        int i =0;
        while (rs1.next()) {
        int id = rs1.getInt("film_id");
        String title = rs1.getString("title");
        String description = rs1.getString("description");
        String release_year = rs1.getString("release_year");
        int language_id = rs1.getInt("language_id");
        int original_lang = rs1.getInt("original_language_id");
        int len = rs1.getInt("length");
        String rating = rs1.getString("rating");
        String special = rs1.getString("special_features");
        data1[i][0] = id + "";
        data1[i][1] = title;
        data1[i][2] = description;
        data1[i][3] = release_year;
        data1[i][4] = language_id + "";
        data1[i][5] = original_lang + "";
        data1[i][6] = len+ "";
        data1[i][7] = rating;
        data1[i][8] = special;
        i++;       
      }
       
      DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
      JTable table1 = new JTable(model1);
      table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      table1.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane = new JScrollPane(table1);
      pane.setVisible(true);
      JFrame f1 = new JFrame("Available_Films");
      JPanel panel1 = new JPanel();
      panel1.add(pane);
      f1.add(panel1);
      f1.setSize(700, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f1.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
      con.close();
    } 
        else if(subs_type.equals("S")){                                         // gia seires 
            String sql1= "Select * from series";
            PreparedStatement pst1=con.prepareStatement(sql1);
            ResultSet rs1= pst1.executeQuery();
            int count=0;
            while(rs1.next())
            {count++;}
            sql1= "Select * from series";
            pst1=con.prepareStatement(sql1);
            rs1= pst1.executeQuery();       
            String columns1[] = { "Series_ID", "Title", "Description","Release_year","Language_ID","Original_language_ID","Episodes","Episode_length","Seasons","Rating", "Special_features" };
            String data1[][] = new String[count][11];
        int i =0;
        while (rs1.next()) {
        int id = rs1.getInt("series_id");
        String title = rs1.getString("title");
        String description = rs1.getString("description");
        String release_year = rs1.getString("release_year");
        int language_id = rs1.getInt("language_id");
        int original_lang = rs1.getInt("original_language_id");
        int episodes = rs1.getInt("episodes");
        int len = rs1.getInt("episode_length");
        int seasons = rs1.getInt("seasons");
        String rating = rs1.getString("rating");
        String special = rs1.getString("special_features");
        data1[i][0] = id + "";
        data1[i][1] = title;
        data1[i][2] = description;
        data1[i][3] = release_year;
        data1[i][4] = language_id + "";
        data1[i][5] = original_lang + "";
        data1[i][6] = episodes+ "";
        data1[i][7] = len + "";
        data1[i][8] = seasons +"";
        data1[i][9] = rating;
        data1[i][10]= special;      
        i++;       
      }
      DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
      JTable table1 = new JTable(model1);
      table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      table1.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane = new JScrollPane(table1);
      pane.setVisible(true);
      JFrame f1 = new JFrame("Available_Series");
      JPanel panel1 = new JPanel();
      panel1.add(pane);
      f1.add(panel1);
      f1.setSize(700, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f1.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
      con.close();    
        
        }
        else if (subs_type.equals("MS")){                                       // gia tainies kai seires
        int count=0;
            while(rs.next())
            {count++;}  
            String sql1= "Select * from film";
            PreparedStatement pst1=con.prepareStatement(sql1);
            ResultSet rs1= pst1.executeQuery();       
            String columns1[] = { "Film_ID", "Title", "Description","Release_year","Language_ID","Original_language_ID", "Length","Rating", "Special_features" };
            String data1[][] = new String[count][9];
        int i =0;
        while (rs1.next()) {
        int id = rs1.getInt("film_id");
        String title = rs1.getString("title");
        String description = rs1.getString("description");
        String release_year = rs1.getString("release_year");
        int language_id = rs1.getInt("language_id");
        int original_lang = rs1.getInt("original_language_id");
        int len = rs1.getInt("length");
        String rating = rs1.getString("rating");
        String special = rs1.getString("special_features");
        data1[i][0] = id + "";
        data1[i][1] = title;
        data1[i][2] = description;
        data1[i][3] = release_year;
        data1[i][4] = language_id + "";
        data1[i][5] = original_lang + "";
        data1[i][6] = len+ "";
        data1[i][7] = rating;
        data1[i][8] = special;
        i++;       
      }
      DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
      JTable table1 = new JTable(model1);
      table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      table1.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane = new JScrollPane(table1);
      pane.setVisible(true);
      JFrame f1 = new JFrame("Available_Films");
      JPanel panel1 = new JPanel();
      panel1.add(pane);
      f1.add(panel1);
      f1.setSize(700, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f1.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        String sql3= "Select * from series";
            PreparedStatement pst3=con.prepareStatement(sql3);
            ResultSet rs3= pst3.executeQuery(); 
            int count1=0;
            while(rs3.next())
            {count1++;}
            String sql2= "Select * from series";
            PreparedStatement pst2=con.prepareStatement(sql2);
            ResultSet rs2= pst2.executeQuery();       
            String columns2[] = { "Series_ID", "Title", "Description","Release_year","Language_ID","Original_language_ID","Episodes","Episode_length","Seasons","Rating", "Special_features" };
            String data2[][] = new String[count1][11];
        int j =0;
        while (rs2.next()) {
        int id = rs2.getInt("series_id");
        String title = rs2.getString("title");
        String description = rs2.getString("description");
        String release_year = rs2.getString("release_year");
        int language_id = rs2.getInt("language_id");
        int original_lang = rs2.getInt("original_language_id");
        int episodes = rs2.getInt("episodes");
        int len = rs2.getInt("episode_length");
        int seasons = rs2.getInt("seasons");
        String rating = rs2.getString("rating");
        String special = rs2.getString("special_features");
        data2[j][0] = id + "";
        data2[j][1] = title;
        data2[j][2] = description;
        data2[j][3] = release_year;
        data2[j][4] = language_id + "";
        data2[j][5] = original_lang + "";
        data2[j][6] = episodes+ "";
        data2[j][7] = len + "";
        data2[j][8] = seasons +"";
        data2[j][9] = rating;
        data2[j][10]= special;      
        j++;       
      }
      DefaultTableModel model2 = new DefaultTableModel(data2, columns2);
      JTable table2 = new JTable(model2);
      table2.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table2.setShowGrid(true);
      table2.setShowVerticalLines(true);
      table2.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane1 = new JScrollPane(table2);
      pane1.setVisible(true);
      JFrame f2 = new JFrame("Available_Series");
      JPanel panel2 = new JPanel();
      panel2.add(pane1);
      f2.add(panel2);
      f2.setSize(700, 150);
      f2.setVisible(true);
       initComponents();
        Toolkit toolkit1=getToolkit();
        Dimension size1= toolkit1.getScreenSize();
        f2.setLocation(size1.width/2-getWidth()/2,size1.height/2-getHeight()/5);
      con.close();     
        }}                                     
    catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    } 
    }                                                

    private void rentalhistoryActionPerformed(java.awt.event.ActionEvent evt) {                                              
        getRentalHistory();       
    }                                             

        
    public void getRentalHistory() 
    {
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");  
            String c_id= "Select customer_id from customer where email like ?";
            PreparedStatement pst=con.prepareStatement(c_id);
            pst.setString(1,username);
            ResultSet rs = pst.executeQuery();
            rs.next();
            cust_id = rs.getInt("customer_id");
        if(subs_type.equals("M")){                                              //// gia tainies
            String sql= "Select * from film_rental where customer_id = ?";
            pst=con.prepareStatement(sql);
            pst.setInt(1,cust_id);
            rs= pst.executeQuery();
            int count=0;
            while(rs.next())
            {count++;}
            String sql1= "Select * from film_rental where customer_id = ?";
            PreparedStatement pst1=con.prepareStatement(sql1);
            pst1.setInt(1,cust_id);
            ResultSet rs1= pst1.executeQuery();    
            String columns1[] = {"Rental_ID", "Rental_Date", "Inventory_ID","Customer_ID","Amount","Film_ID","Title"};
            String data1[][] = new String[count][7];
                       
        int i =0;
        while (rs1.next()) { 
        String sql4= "Select amount from film_payment where film_payment.rental_id = ?"; // gia na parw to amount apo to film_payment
        PreparedStatement pst4=con.prepareStatement(sql4); 
        String sql5= "Select film_id from film_inventory where inventory_id=?"; // gia na parw to film_id apo to film_inventory
        PreparedStatement pst5=con.prepareStatement(sql5); 
        String sql6 = "Select title from film where film_id=?";                 // gia na parw to title apo to film
        PreparedStatement pst6 = con.prepareStatement(sql6);
        int id = rs1.getInt("film_rental.rental_id");
        String date = rs1.getString("rental_date");
        int inv_id = rs1.getInt("inventory_id");
        int custom_id = rs1.getInt("customer_id");
        pst4.setInt(1,id);
        ResultSet rs4= pst4.executeQuery();
        pst5.setInt(1,inv_id);
        ResultSet rs5= pst5.executeQuery();
        rs4.next();
        rs5.next();
        float amount = rs4.getFloat("amount");
        int fid = rs5.getInt("film_id");
        pst6.setInt(1,fid);
        ResultSet rs6= pst6.executeQuery();
        rs6.next();
        String ftitle = rs6.getString("title");
        data1[i][0] = id + "";
        data1[i][1] = date;
        data1[i][2] = inv_id + "";
        data1[i][3] = custom_id + "";
        data1[i][4] = amount + "";
        data1[i][5] = fid + "";
        data1[i][6] = ftitle;
        i++;    
      }
      DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
      JTable table1 = new JTable(model1);
      table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      table1.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane = new JScrollPane(table1);
      pane.setVisible(true);
      JFrame f1 = new JFrame("Film_Rental_History");
      JPanel panel1 = new JPanel();
      panel1.add(pane);
      f1.add(panel1);
      f1.setSize(700, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f1.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
      con.close();
        }
    if(subs_type.equals("S")){                                                  //// gia seires 
            String sql1= "Select * from series";                                
            PreparedStatement pst1=con.prepareStatement(sql1);
            ResultSet rs1= pst1.executeQuery();
            int count=0;
            while(rs1.next())
            {count++;}
            sql1= "Select * from series_rental where customer_id = ?";
            pst1=con.prepareStatement(sql1);
            pst1.setInt(1,cust_id);
            rs1= pst1.executeQuery();    
            String columns1[] = {"Rental_ID", "Rental_Date", "Inventory_ID","Episode_Count","Customer_ID","Amount","Series_ID","Title"};
            String data1[][] = new String[count][8];    
       int i =0; 
        while (rs1.next()) {                                                    
        String sql4= "Select amount from series_payment where series_payment.rental_id = ?"; // gia na parw to amount apo to series_payment
        PreparedStatement pst4=con.prepareStatement(sql4); 
        String sql5= "Select series_id from series_inventory where inventory_id=?"; // gia na parw to film_id apo to series_inventory
        PreparedStatement pst5=con.prepareStatement(sql5); 
        String sql6 = "Select title from series where series_id=?";                 // gia na parw to title apo to series
        PreparedStatement pst6 = con.prepareStatement(sql6);
        int id = rs1.getInt("series_rental.rental_id");
        String date = rs1.getString("rental_date");
        int inv_id = rs1.getInt("inventory_id");
        int custom_id = rs1.getInt("customer_id");
        int ep_count = rs1.getInt("episode_count");
        pst4.setInt(1,id);
        ResultSet rs4= pst4.executeQuery();
        pst5.setInt(1,inv_id);
        ResultSet rs5= pst5.executeQuery();
        rs4.next();
        rs5.next();
        float amount = rs4.getFloat("amount");                                  
        int sid = rs5.getInt("series_id");                                      
        pst6.setInt(1,sid);
        ResultSet rs6= pst6.executeQuery();
        rs6.next();
        String stitle = rs6.getString("title");
        data1[i][0] = id + "";
        data1[i][1] = date;
        data1[i][2] = inv_id + "";
        data1[i][3] = ep_count + "";
        data1[i][4] = custom_id + "";
        data1[i][5] = amount + "";
        data1[i][6] = sid + "";
        data1[i][7] = stitle;
        i++;    
      }     
            
      DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
      JTable table1 = new JTable(model1);
      table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      table1.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane = new JScrollPane(table1);
      pane.setVisible(true);
      JFrame f1 = new JFrame("Series_Rental_History");
      JPanel panel1 = new JPanel();
      panel1.add(pane);
      f1.add(panel1);
      f1.setSize(700, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f1.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
      con.close();}      
    if(subs_type.equals("MS")){                                            // gia tainies kai seires
        String sql= "Select * from film_rental where customer_id = ?";
            pst=con.prepareStatement(sql);
            pst.setInt(1,cust_id);
            rs= pst.executeQuery();
            int count=0;
            while(rs.next())
            {count++;}
            String sql1= "Select * from film_rental where customer_id = ?";
            PreparedStatement pst1=con.prepareStatement(sql1);
            pst1.setInt(1,cust_id);
            ResultSet rs1= pst1.executeQuery();    
            String columns1[] = {"Rental_ID", "Rental_Date", "Inventory_ID","Customer_ID","Amount","Film_ID","Title"};
            String data1[][] = new String[count][7];
                       
        int i =0;
        while (rs1.next()) { 
        String sql4= "Select amount from film_payment where film_payment.rental_id = ?"; // gia na parw to amount apo to film_payment
        PreparedStatement pst4=con.prepareStatement(sql4); 
        String sql5= "Select film_id from film_inventory where inventory_id=?"; // gia na parw to film_id apo to film_inventory
        PreparedStatement pst5=con.prepareStatement(sql5); 
        String sql6 = "Select title from film where film_id=?";                 // gia na parw to title apo to film
        PreparedStatement pst6 = con.prepareStatement(sql6);
        int id = rs1.getInt("film_rental.rental_id");
        String date = rs1.getString("rental_date");
        int inv_id = rs1.getInt("inventory_id");
        int custom_id = rs1.getInt("customer_id");
        pst4.setInt(1,id);
        ResultSet rs4= pst4.executeQuery();
        pst5.setInt(1,inv_id);
        ResultSet rs5= pst5.executeQuery();
        rs4.next();
        rs5.next();
        float amount = rs4.getFloat("amount");
        int fid = rs5.getInt("film_id");
        pst6.setInt(1,fid);
        ResultSet rs6= pst6.executeQuery();
        rs6.next();
        String ftitle = rs6.getString("title");
        data1[i][0] = id + "";
        data1[i][1] = date;
        data1[i][2] = inv_id + "";
        data1[i][3] = custom_id + "";
        data1[i][4] = amount + "";
        data1[i][5] = fid + "";
        data1[i][6] = ftitle;
        i++;    
      }
      DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
      JTable table1 = new JTable(model1);
      table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      table1.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane = new JScrollPane(table1);
      pane.setVisible(true);
      JFrame f1 = new JFrame("Film_Rental_History");
      JPanel panel1 = new JPanel();
      panel1.add(pane);
      f1.add(panel1);
      f1.setSize(700, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f1.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2); // ws edw gia tainies
       
        String sql2= "Select * from series";                                    // apo edw kai katw gia seires
            PreparedStatement pst2=con.prepareStatement(sql2);
            ResultSet rs2= pst2.executeQuery();
            int count1=0;
            while(rs2.next())
            {count1++;}
            sql2= "Select * from series_rental where customer_id = ?";
            pst2=con.prepareStatement(sql2);
            pst2.setInt(1,cust_id);
            rs2= pst2.executeQuery();    
            String columns2[] = {"Rental_ID", "Rental_Date", "Inventory_ID","Episode_Count","Customer_ID","Amount","Series_ID","Title"};
            String data2[][] = new String[count1][8];    
            
        i =0;
        while (rs2.next()) { 
        String sql7= "Select amount from series_payment where series_payment.rental_id = ?"; // gia na parw to amount apo to series_payment
        PreparedStatement pst7=con.prepareStatement(sql7); 
        String sql8= "Select series_id from series_inventory where inventory_id=?"; // gia na parw to film_id apo to series_inventory
        PreparedStatement pst8=con.prepareStatement(sql8); 
        String sql9 = "Select title from series where series_id=?";                 // gia na parw to title apo to series
        PreparedStatement pst9 = con.prepareStatement(sql9);
        int id = rs2.getInt("series_rental.rental_id");
        String date = rs2.getString("rental_date");
        int inv_id = rs2.getInt("inventory_id");
        int custom_id = rs2.getInt("customer_id");
        int ep_count = rs2.getInt("episode_count");
        pst7.setInt(1,id);
        ResultSet rs7= pst7.executeQuery();
        pst8.setInt(1,inv_id);
        ResultSet rs8= pst8.executeQuery();
        rs7.next();
        rs8.next();
        float amount2 = rs7.getFloat("amount");                                  // bgzaei lathos noumero
        int sid = rs8.getInt("series_id");
        pst9.setInt(1,sid);
        ResultSet rs9= pst9.executeQuery();
        rs9.next();
        String stitle = rs9.getString("title");
        data2[i][0] = id + "";
        data2[i][1] = date;
        data2[i][2] = inv_id + "";
        data2[i][3] = ep_count + "";
        data2[i][4] = custom_id + "";
        data2[i][5] = amount2 + "";
        data2[i][6] = sid + "";
        data2[i][7] = stitle;
        i++;    
      }     
            
      DefaultTableModel model2 = new DefaultTableModel(data2, columns2);
      JTable table2 = new JTable(model2);
      table2.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table2.setShowGrid(true);
      table2.setShowVerticalLines(true);
      table2.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane2 = new JScrollPane(table2);
      pane2.setVisible(true);
      JFrame f2 = new JFrame("Series_Rental_History");
      JPanel panel2 = new JPanel();
      panel2.add(pane2);
      f2.add(panel2);
      f2.setSize(700, 150);
      f2.setVisible(true);
       initComponents();
        Toolkit toolkit2=getToolkit();
        Dimension size2= toolkit2.getScreenSize();
        f2.setLocation(size2.width/2-getWidth()/2,size2.height/2-getHeight()/5);
      con.close();}}                                                                                                                   
      catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }}    
            
    private void makerentalActionPerformed(java.awt.event.ActionEvent evt) {                                           
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");  
            String sql= "Select * from film";
            PreparedStatement pst=con.prepareStatement(sql);
            ResultSet rs= pst.executeQuery();
            
            String c_id= "Select customer_id from customer where email like ?";
            PreparedStatement pst_id=con.prepareStatement(c_id);
            pst_id.setString(1,username);
            ResultSet rs_id = pst_id.executeQuery();
            rs_id.next();
            cust_id = rs_id.getInt("customer_id");
        if(subs_type.equals("M")){                                              // gia tainies
            int count=0;
            while(rs.next())
            {count++;}
            String sql1= "Select * from film";
            PreparedStatement pst1=con.prepareStatement(sql1);
            ResultSet rs1= pst1.executeQuery();       
            String columns1[] = { "Film_ID", "Title", "Description","Release_year","Language_ID","Original_language_ID", "Length","Rating", "Special_features" };
            String data1[][] = new String[count][9];
        int i =0;
        while (rs1.next()) {
        int id = rs1.getInt("film_id");
        String title = rs1.getString("title");
        String description = rs1.getString("description");
        String release_year = rs1.getString("release_year");
        int language_id = rs1.getInt("language_id");
        int original_lang = rs1.getInt("original_language_id");
        int len = rs1.getInt("length");
        String rating = rs1.getString("rating");
        String special = rs1.getString("special_features");
        data1[i][0] = id + "";
        data1[i][1] = title;
        data1[i][2] = description;
        data1[i][3] = release_year;
        data1[i][4] = language_id + "";
        data1[i][5] = original_lang + "";
        data1[i][6] = len+ "";
        data1[i][7] = rating;
        data1[i][8] = special;
        i++;       
      }
       
      DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
      JTable table1 = new JTable(model1);
      table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      table1.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane = new JScrollPane(table1);
      pane.setVisible(true);
      JFrame f1 = new JFrame("Available_Films");
      JPanel panel1 = new JPanel();
      panel1.add(pane);
      f1.add(panel1);
      f1.setSize(700, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f1.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        
        table1.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
            try{ 
             if(e.getClickCount() ==2)
             {
               JTable jtable = (JTable)e.getSource();  
               int row= jtable.getSelectedRow();
               film_id = (String)jtable.getValueAt(row,0);
               String datetime = CurrentDatetime();
              
            String sql2= "select inventory_id from film_inventory where film_id=?";
            PreparedStatement pst2=con.prepareStatement(sql2);       
            pst2.setString(1,film_id);   
            ResultSet rs2= pst2.executeQuery();
            rs2.next();
            int inv_id= rs2.getInt("inventory_id");
            
            String sql3 = "insert into `film_rental` (`rental_id`, `rental_date`, `inventory_id`, `customer_id`) VALUES (?,?,?,?)";
            PreparedStatement pst3=con.prepareStatement(sql3);  
            pst3.setString(1,null);
            pst3.setString(2,datetime);
            pst3.setInt(3, inv_id);
            pst3.setInt(4,cust_id);
            pst3.execute();
            JOptionPane.showMessageDialog(null,"Succesful rental!");
            JOptionPane.showMessageDialog(null,"Succesful payment!");
            
             con.close();
             }}
         catch(Exception ex){
        JOptionPane.showMessageDialog(null,ex);
        }      
         }});
          
    } 
        else if(subs_type.equals("S")){                                         // gia seires 
            String sql1= "Select * from series";
            PreparedStatement pst1=con.prepareStatement(sql1);
            ResultSet rs1= pst1.executeQuery();
            int count=0;
            while(rs1.next())
            {count++;}
            sql1= "Select * from series";
            pst1=con.prepareStatement(sql1);
            rs1= pst1.executeQuery();       
            String columns1[] = { "Series_ID", "Title", "Description","Release_year","Language_ID","Original_language_ID","Episodes","Episode_length","Seasons","Rating", "Special_features" };
            String data1[][] = new String[count][11];
        int i =0;
        while (rs1.next()) {
        int id = rs1.getInt("series_id");
        String title = rs1.getString("title");
        String description = rs1.getString("description");
        String release_year = rs1.getString("release_year");
        int language_id = rs1.getInt("language_id");
        int original_lang = rs1.getInt("original_language_id");
        int episodes = rs1.getInt("episodes");
        int len = rs1.getInt("episode_length");
        int seasons = rs1.getInt("seasons");
        String rating = rs1.getString("rating");
        String special = rs1.getString("special_features");
        data1[i][0] = id + "";
        data1[i][1] = title;
        data1[i][2] = description;
        data1[i][3] = release_year;
        data1[i][4] = language_id + "";
        data1[i][5] = original_lang + "";
        data1[i][6] = episodes+ "";
        data1[i][7] = len + "";
        data1[i][8] = seasons +"";
        data1[i][9] = rating;
        data1[i][10]= special;      
        i++;       
      }
      DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
      JTable table1 = new JTable(model1);
      table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      table1.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane = new JScrollPane(table1);
      pane.setVisible(true);
      JFrame f1 = new JFrame("Available_Series");
      JPanel panel1 = new JPanel();
      panel1.add(pane);
      f1.add(panel1);
      f1.setSize(700, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f1.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
      
        table1.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
            try{ 
             if(e.getClickCount() ==2)
             {
               JTable jtable = (JTable)e.getSource();  
               int row= jtable.getSelectedRow();
               series_id = (String)jtable.getValueAt(row,0);
               sep_count = (String)jtable.getValueAt(row,6);
               int sep_count2= Integer.parseInt(sep_count);  
               
             String columns2[] = {"Number of Episodes" };                        // gia na tipwthei o arithmos twn epeisodiwn
            String data2[][] = new String[sep_count2][1];   
            for(int i=0;i<sep_count2;i++)    
            {data2[i][0]= (i+1) + "";}
            
            DefaultTableModel model2 = new DefaultTableModel(data2, columns2);
            JTable table2 = new JTable(model2);
            table2.setDefaultEditor(Object.class, null);                        ///kanei ton pinaka mi-editable
            table2.setShowGrid(true);
            table2.setShowVerticalLines(true);
            table2.getTableHeader().setReorderingAllowed(false);
            JScrollPane pane2 = new JScrollPane(table2);
            pane2.setVisible(true);
            JFrame f2 = new JFrame("Choose number of episodes to rent: ");
            JPanel panel2 = new JPanel();
            panel2.add(pane2);
            f2.add(panel2);
            f2.setSize(700, 150);
            f2.setVisible(true);
            f1.setVisible(false);
            initComponents();
            Toolkit toolkit2=getToolkit();
            Dimension size2= toolkit2.getScreenSize();
            f2.setLocation(size2.width/2-getWidth()/2,size2.height/2-getHeight()/2);   
              
             table2.addMouseListener(new MouseAdapter() {                        //mouseListener gia ton arithmo twn epeisodiwn 
                      public void mouseClicked(MouseEvent ee) {                    
                          if(ee.getClickCount() ==2)
                               {try{
                                JTable jtable2 = (JTable)ee.getSource();  
                                int row2= jtable2.getSelectedRow();
            String ep_choice = (String)jtable2.getValueAt(row2,0);
            int ep_choice2= Integer.parseInt(ep_choice); 
            
            String datetime = CurrentDatetime();
            String sql2= "select inventory_id from series_inventory where series_id=?";
            PreparedStatement pst2=con.prepareStatement(sql2);       
            pst2.setString(1,series_id);   
            ResultSet rs2= pst2.executeQuery();
            rs2.next();
            int inv_id= rs2.getInt("inventory_id");
            
            String sql3 = "insert into `series_rental` (`rental_id`, `rental_date`, `inventory_id`,`episode_count`,`customer_id`) VALUES (?,?,?,?,?)";
            PreparedStatement pst3=con.prepareStatement(sql3);  
            pst3.setString(1,null);
            pst3.setString(2,datetime);
            pst3.setInt(3, inv_id);
            pst3.setInt(4, ep_choice2);  
            pst3.setInt(5,cust_id);
            pst3.execute();
            JOptionPane.showMessageDialog(null,"Succesful rental!");
            JOptionPane.showMessageDialog(null,"Succesful payment!");
            
            con.close();
                      }
                      catch(Exception ex2){
                     JOptionPane.showMessageDialog(null,ex2);
                      } }     
                      }});
             } 
            } 
         catch(Exception ex){
        JOptionPane.showMessageDialog(null,ex);
        }      
         }});
        
        }
        else if (subs_type.equals("MS")){                                       // gia tainies kai seires
        int count=0;
            while(rs.next())
            {count++;}  
            String sql1= "Select * from film";
            PreparedStatement pst1=con.prepareStatement(sql1);
            ResultSet rs1= pst1.executeQuery();       
            String columns1[] = { "Film_ID", "Title", "Description","Release_year","Language_ID","Original_language_ID", "Length","Rating", "Special_features" };
            String data1[][] = new String[count][9];
        int i =0;
        while (rs1.next()) {
        int id = rs1.getInt("film_id");
        String title = rs1.getString("title");
        String description = rs1.getString("description");
        String release_year = rs1.getString("release_year");
        int language_id = rs1.getInt("language_id");
        int original_lang = rs1.getInt("original_language_id");
        int len = rs1.getInt("length");
        String rating = rs1.getString("rating");
        String special = rs1.getString("special_features");
        data1[i][0] = id + "";
        data1[i][1] = title;
        data1[i][2] = description;
        data1[i][3] = release_year;
        data1[i][4] = language_id + "";
        data1[i][5] = original_lang + "";
        data1[i][6] = len+ "";
        data1[i][7] = rating;
        data1[i][8] = special;
        i++;       
      }
      DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
      JTable table1 = new JTable(model1);
      table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      table1.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane = new JScrollPane(table1);
      pane.setVisible(true);
      JFrame f1 = new JFrame("Available_Films");
      JPanel panel1 = new JPanel();
      panel1.add(pane);
      f1.add(panel1);
      f1.setSize(700, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f1.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        
        table1.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
            try{ 
             if(e.getClickCount() ==2)
             {
               JTable jtable = (JTable)e.getSource();  
               int row= jtable.getSelectedRow();
               film_id = (String)jtable.getValueAt(row,0);
               String datetime = CurrentDatetime();
              
            String sql21= "select inventory_id from film_inventory where film_id=?";
            PreparedStatement pst21=con.prepareStatement(sql21);       
            pst21.setString(1,film_id);   
            ResultSet rs21= pst21.executeQuery();
            rs21.next();
            int inv_id= rs21.getInt("inventory_id");
            
            String sql22 = "insert into `film_rental` (`rental_id`, `rental_date`, `inventory_id`, `customer_id`) VALUES (?,?,?,?)";
            PreparedStatement pst22=con.prepareStatement(sql22);  
            pst22.setString(1,null);
            pst22.setString(2,datetime);
            pst22.setInt(3, inv_id);
            pst22.setInt(4,cust_id);
            pst22.execute();
            JOptionPane.showMessageDialog(null,"Succesful rental!");
         
            JOptionPane.showMessageDialog(null,"Succesful payment!");
             con.close();
             }}
         catch(Exception ex){
        JOptionPane.showMessageDialog(null,ex);
        }      
         }});
        
        
        String sql3= "Select * from series";                                    // gia seires
            PreparedStatement pst3=con.prepareStatement(sql3);
            ResultSet rs3= pst3.executeQuery(); 
            int count1=0;
            while(rs3.next())
            {count1++;}
            String sql2= "Select * from series";
            PreparedStatement pst2=con.prepareStatement(sql2);
            ResultSet rs2= pst2.executeQuery();       
            String columns2[] = { "Series_ID", "Title", "Description","Release_year","Language_ID","Original_language_ID","Episodes","Episode_length","Seasons","Rating", "Special_features" };
            String data2[][] = new String[count1][11];
        int j =0;
        while (rs2.next()) {
        int id = rs2.getInt("series_id");
        String title = rs2.getString("title");
        String description = rs2.getString("description");
        String release_year = rs2.getString("release_year");
        int language_id = rs2.getInt("language_id");
        int original_lang = rs2.getInt("original_language_id");
        int episodes = rs2.getInt("episodes");
        int len = rs2.getInt("episode_length");
        int seasons = rs2.getInt("seasons");
        String rating = rs2.getString("rating");
        String special = rs2.getString("special_features");
        data2[j][0] = id + "";
        data2[j][1] = title;
        data2[j][2] = description;
        data2[j][3] = release_year;
        data2[j][4] = language_id + "";
        data2[j][5] = original_lang + "";
        data2[j][6] = episodes+ "";
        data2[j][7] = len + "";
        data2[j][8] = seasons +"";
        data2[j][9] = rating;
        data2[j][10]= special;      
        j++;       
      }
      DefaultTableModel model2 = new DefaultTableModel(data2, columns2);
      JTable table2 = new JTable(model2);
      table2.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
      table2.setShowGrid(true);
      table2.setShowVerticalLines(true);
      table2.getTableHeader().setReorderingAllowed(false);
      JScrollPane pane1 = new JScrollPane(table2);
      pane1.setVisible(true);
      JFrame f2 = new JFrame("Available_Series");
      JPanel panel2 = new JPanel();
      panel2.add(pane1);
      f2.add(panel2);
      f2.setSize(700, 150);
      f2.setVisible(true);
       initComponents();
        Toolkit toolkit1=getToolkit();
        Dimension size1= toolkit1.getScreenSize();
        f2.setLocation(size1.width/2-getWidth()/2,size1.height/2-getHeight()/5);
      
     table2.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e3) {                               // kanei override tis public methodou
            try{ 
             if(e3.getClickCount() ==2)
             {
               JTable jtable1 = (JTable)e3.getSource();  
               int row= jtable1.getSelectedRow();
               series_id = (String)jtable1.getValueAt(row,0);
               sep_count = (String)jtable1.getValueAt(row,6);
               int sep_count2= Integer.parseInt(sep_count);  
             
             String columns3[] = {"Number of Episodes" };                        // gia na tipwthei o arithmos twn epeisodiwn
            String data3[][] = new String[sep_count2][1];   
            for(int i=0;i<sep_count2;i++)    
            {data3[i][0]= (i+1) + "";}
            
            DefaultTableModel model3 = new DefaultTableModel(data3, columns3);
            JTable table3 = new JTable(model3);
            table3.setDefaultEditor(Object.class, null);                        ///kanei ton pinaka mi-editable
            table3.setShowGrid(true);
            table3.setShowVerticalLines(true);
            table3.getTableHeader().setReorderingAllowed(false);
            JScrollPane pane3 = new JScrollPane(table3);
            pane3.setVisible(true);
            JFrame f3 = new JFrame("Choose number of episodes to rent: ");
            JPanel panel3 = new JPanel();
            panel3.add(pane3);
            f3.add(panel3);
            f3.setSize(700, 150);
            f3.setVisible(true);
            f2.setVisible(false);
            initComponents();
            Toolkit toolkit3=getToolkit();
            Dimension size3= toolkit3.getScreenSize();
            f3.setLocation(size3.width/2-getWidth()/2,size3.height/2-getHeight()/5);   
              
             table3.addMouseListener(new MouseAdapter() {                        //mouseListener gia ton arithmo twn epeisodiwn 
                      public void mouseClicked(MouseEvent ee) {                    
                          if(ee.getClickCount() ==2)
                               {try{
                                JTable jtable2 = (JTable)ee.getSource();  
                                int row2= jtable2.getSelectedRow();
            String ep_choice = (String)jtable2.getValueAt(row2,0);
            int ep_choice2= Integer.parseInt(ep_choice); 
            
            String datetime = CurrentDatetime();
            String sql12= "select inventory_id from series_inventory where series_id=?";
            PreparedStatement pst12=con.prepareStatement(sql12);       
            pst12.setString(1,series_id);   
            ResultSet rs12= pst12.executeQuery();
            rs12.next();
            int inv_id= rs12.getInt("inventory_id");
            
            String sql13 = "insert into `series_rental` (`rental_id`, `rental_date`, `inventory_id`,`episode_count`,`customer_id`) VALUES (?,?,?,?,?)";
            PreparedStatement pst13=con.prepareStatement(sql13);  
            pst13.setString(1,null);
            pst13.setString(2,datetime);
            pst13.setInt(3, inv_id);
            pst13.setInt(4, ep_choice2);  
            pst13.setInt(5,cust_id);
            pst13.execute();
            JOptionPane.showMessageDialog(null,"Succesful rental!");
            JOptionPane.showMessageDialog(null,"Succesful payment!");
            con.close();
                      }
                      catch(Exception ex2){
                     JOptionPane.showMessageDialog(null,ex2);
                      } }     
                      }});
             } 
            } 
         catch(Exception ex){
        JOptionPane.showMessageDialog(null,ex);
        }      
         }});
           
        
        }}                                     
    catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    } 
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton availablecontent;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton logout;
    private javax.swing.JButton makerental;
    private javax.swing.JButton rentalhistory;
    private javax.swing.JButton viewaccount;
    // End of variables declaration                   
}

