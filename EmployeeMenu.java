/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tvondemand;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Scrollbar;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable.PrintMode;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseAdapter;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JTextField;

public class EmployeeMenu extends javax.swing.JFrame {
    
    public String username;
    public String subs_type;
    public String user;
    public String ctype;
    public String c_act;
    
     public EmployeeMenu() {
          initComponents();
    }
    
    
    public EmployeeMenu(String employee) {
        initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        username=employee;
        
        try{                                                                    // enimerwnei ton pinaka user me to email tou trexontos xristi
          Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");   
         String sqli = "update user set username=? where user_id=1";    
         PreparedStatement psti=con.prepareStatement(sqli);
         psti.setString(1,username);
         psti.execute();}
          catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        logout = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        logout1 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        rentalhistory = new javax.swing.JButton();
        mostrented = new javax.swing.JButton();
        showcustomers = new javax.swing.JButton();
        updatetables = new javax.swing.JButton();

        logout.setBackground(new java.awt.Color(0, 51, 51));
        logout.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Log out");

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(0, 51, 51));
        jTextField1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 34)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("   Welcome! What do you want to do next?");
        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 153, 153));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(0, 51, 51));
        jTextField2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 34)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setText("   Welcome! What do you want to do next?");
        jTextField2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        logout1.setBackground(new java.awt.Color(0, 51, 51));
        logout1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        logout1.setForeground(new java.awt.Color(255, 255, 255));
        logout1.setText("Log out");
        logout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout1ActionPerformed(evt);
            }
        });

        jTextField3.setBackground(new java.awt.Color(0, 153, 153));
        jTextField3.setFont(new java.awt.Font("Bauhaus 93", 2, 14)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(255, 255, 255));
        jTextField3.setText("TVonDemand");
        jTextField3.setBorder(null);

        rentalhistory.setBackground(new java.awt.Color(0, 51, 51));
        rentalhistory.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        rentalhistory.setForeground(new java.awt.Color(255, 255, 255));
        rentalhistory.setText("View Rental History");
        rentalhistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentalhistoryActionPerformed(evt);
            }
        });

        mostrented.setBackground(new java.awt.Color(0, 51, 51));
        mostrented.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        mostrented.setForeground(new java.awt.Color(255, 255, 255));
        mostrented.setText("View Most Rented");
        mostrented.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrentedActionPerformed(evt);
            }
        });

        showcustomers.setBackground(new java.awt.Color(0, 51, 51));
        showcustomers.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        showcustomers.setForeground(new java.awt.Color(255, 255, 255));
        showcustomers.setText("Show Customers");
        showcustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showcustomersActionPerformed(evt);
            }
        });

        updatetables.setBackground(new java.awt.Color(0, 51, 51));
        updatetables.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        updatetables.setForeground(new java.awt.Color(255, 255, 255));
        updatetables.setText("Update Tables");
        updatetables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatetablesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(showcustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rentalhistory, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(updatetables, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mostrented, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 64, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(logout1)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
                        .addContainerGap(42, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(287, 287, 287))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rentalhistory, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showcustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatetables, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(mostrented, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void logout1ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        Login login= new Login();
        login.setVisible(true);
        setVisible(false);
    }                                       

    private void rentalhistoryActionPerformed(java.awt.event.ActionEvent evt) {                                              
       try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");  
        String sql= "Select * from customer";
        PreparedStatement pst=con.prepareStatement(sql);
        ResultSet rs= pst.executeQuery();
        int count=0;
        while(rs.next())
          {count++;} 
        String columns[] = {"Customer_ID", "First_Name", "Last_Name","Email","Address_ID","Active", "Create_Date","Subscription_type" };
        String data[][] = new String[count][8];
        String sql1= "Select * from customer";
        PreparedStatement pst1=con.prepareStatement(sql1);
        ResultSet rs1= pst1.executeQuery();
        int i=0;
        while (rs1.next()) {
        int id = rs1.getInt("customer_id");
        String first_name = rs1.getString("first_name");
        String last_name = rs1.getString("last_name");
        String email = rs1.getString("email");
        int address_id = rs1.getInt("address_id");
        int active = rs1.getInt("active");
        String create_date = rs1.getString("create_date");
        String sub_type = rs1.getString("subscription_type");
        data[i][0] = id + "";
        data[i][1] = first_name;
        data[i][2] = last_name;
        data[i][3] = email;
        data[i][4] = address_id + "";
        data[i][5] = active + "";
        data[i][6] = create_date;
        data[i][7] = sub_type;
        i++;
        }
           
        DefaultTableModel model = new DefaultTableModel(data, columns);          
       JTable table = new JTable(model); 
       table.setDefaultEditor(Object.class, null);
      table.getTableHeader().setReorderingAllowed(false);                       
      table.getColumnModel().getColumn(0).setPreferredWidth(85);
      table.getColumnModel().getColumn(1).setPreferredWidth(175);
      table.getColumnModel().getColumn(2).setPreferredWidth(200);
      table.getColumnModel().getColumn(3).setPreferredWidth(250);
      table.getColumnModel().getColumn(6).setPreferredWidth(150);
      table.getColumnModel().getColumn(7).setPreferredWidth(125);
      table.setPreferredScrollableViewportSize(table.getPreferredSize());       
      table.setShowGrid(true);
      table.setShowVerticalLines(true);
      JScrollPane pane = new JScrollPane(table);
      JFrame f = new JFrame("Customer_List");
      JPanel panel = new JPanel();
      panel.add(pane);
      f.add(panel);
      f.setSize(1300, 150);
      f.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f.setLocation(size.width/6-getWidth()/4,size.height/2-getHeight()/2);
        
         table.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
             if(e.getClickCount() ==2)
             {
               JTable jtable = (JTable)e.getSource();  
               int row= jtable.getSelectedRow();
               user= (String)jtable.getValueAt(row,3);
               subs_type= (String)jtable.getValueAt(row,7);
               CustomerMenu cmenu = new CustomerMenu(user,subs_type);
               cmenu.getRentalHistory();
              }
           }
         });
    
      con.close();
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }              
        
    }                                             

    private void mostrentedActionPerformed(java.awt.event.ActionEvent evt) {                                           
        Date date = new Date();                                                 //
        Calendar cal = Calendar.getInstance();                                  //
        cal.setTime(date);                                                      //
        int month = cal.get(Calendar.MONTH);                                    // dinei ton proigoumeno mina se morfi integer                          
         try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");   
            String sql= "select film.film_id,title\n" +                         // gia tis tainies
            "from film_rental \n" +
            "inner join film_inventory \n" +
            "on film_inventory.inventory_id=film_rental.inventory_id\n" +
            "inner join film\n" +
            "on film.film_id= film_inventory.film_id\n" +
            "where date(rental_date)>= ? and date(rental_date)<= ?    \n" +
            "group by film_rental.inventory_id order by count(film_rental.inventory_id) desc limit 5";                      
            PreparedStatement pst=con.prepareStatement(sql);
            
            if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {
            pst.setString(1,"2022-"+month+"-01");                                      
            pst.setString(2,"2022-"+month+"-31");}
            else if(month == 4 || month == 6 || month == 9 || month == 11){
             pst.setString(1,"2022-"+month+"-01");                                      
             pst.setString(2,"2022-"+month+"-30");   
            }
            else{
             pst.setString(1,"2022-"+month+"-01");                                      
             pst.setString(2,"2022-"+month+"-28");    
            }
            ResultSet rs= pst.executeQuery();
            String columns[] = {"Film_ID", "Title"};
            String data[][] = new String[5][2];
            
        int i=0;
        while(rs.next())                                                        
        {int id = rs.getInt("film_id");
         String title = rs.getString("title");
         data[i][0] = id + "";
         data[i][1] = title;
         i++;}
        
      DefaultTableModel model = new DefaultTableModel(data, columns); 
      JTable table = new JTable(model); 
      table.setDefaultEditor(Object.class, null);                               // kanei ton pinaka mi-editible
      table.getTableHeader().setReorderingAllowed(false);                       
      table.getColumnModel().getColumn(0).setPreferredWidth(85);
      table.getColumnModel().getColumn(1).setPreferredWidth(175);
      table.setPreferredScrollableViewportSize(table.getPreferredSize());
      table.setShowGrid(true);
      table.setShowVerticalLines(true);
      JScrollPane pane = new JScrollPane(table);
      JFrame f = new JFrame("Top_5_Rented_Films");
      JPanel panel = new JPanel();
      panel.add(pane);
      f.add(panel);
      f.setSize(600, 150);
      f.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f.setLocation(size.width/2-getWidth()/3,size.height/2-getHeight()/2); 
        
    String sql1 = "select series.series_id,title\n" +                           // gia tis seires
    "from series_rental \n" +
    "inner join series_inventory \n" +
    "on series_inventory.inventory_id=series_rental.inventory_id\n" +
    "inner join series\n" +
    "on series.series_id= series_inventory.series_id\n" +
    "where date(rental_date)>= ? and date(rental_date)<= ?    \n" +
    "group by series_rental.inventory_id order by sum(series_rental.episode_count) desc limit 5";    
    PreparedStatement pst1=con.prepareStatement(sql1);
    
    if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {
            pst1.setString(1,"2022-"+month+"-01");                                      
            pst1.setString(2,"2022-"+month+"-31");}
            else if(month == 4 || month == 6 || month == 9 || month == 11){
             pst1.setString(1,"2022-"+month+"-01");                                      
             pst1.setString(2,"2022-"+month+"-30");   
            }
            else{
             pst1.setString(1,"2022-"+month+"-01");                                      
             pst1.setString(2,"2022-"+month+"-28");    
            }
            ResultSet rs1= pst1.executeQuery();
            String columns1[] = {"Series_ID", "Title"};
            String data1[][] = new String[5][2];
            
        i=0;
        while(rs1.next())                                                        
        {int id = rs1.getInt("series_id");
         String title = rs1.getString("title");
         data1[i][0] = id + "";
         data1[i][1] = title;
         i++;}
        
      DefaultTableModel model1 = new DefaultTableModel(data1, columns1); 
      JTable table1 = new JTable(model1); 
      table1.setDefaultEditor(Object.class, null);                               // kanei ton pinaka mi-editible
      table1.getTableHeader().setReorderingAllowed(false);                       
      table1.getColumnModel().getColumn(0).setPreferredWidth(85);
      table1.getColumnModel().getColumn(1).setPreferredWidth(175);
      table1.setPreferredScrollableViewportSize(table1.getPreferredSize());
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      JScrollPane pane1 = new JScrollPane(table1);
      JFrame f1 = new JFrame("Top_5_Rented_Series");
      JPanel panel1 = new JPanel();
      panel1.add(pane1);
      f1.add(panel1);
      f1.setSize(600, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit1=getToolkit();
        Dimension size1= toolkit1.getScreenSize();
        f1.setLocation(size1.width/2-getWidth()/3,size1.height/2-getHeight()/5); 
        
      con.close();
    }                                          
     catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }    
    }
      
    
    private void showcustomersActionPerformed(java.awt.event.ActionEvent evt) {                                              
        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");  
        String sql= "Select * from customer";
        PreparedStatement pst=con.prepareStatement(sql);
        ResultSet rs= pst.executeQuery();
        int count=0;
        while(rs.next())
          {count++;} 
        String columns[] = {"Customer_ID", "First_Name", "Last_Name","Email","Address_ID","Active", "Create_Date","Subscription_type" };
        String data[][] = new String[count][8];
        String sql1= "Select * from customer";
        PreparedStatement pst1=con.prepareStatement(sql1);
        ResultSet rs1= pst1.executeQuery();
        int i=0;
        while (rs1.next()) {
        int id = rs1.getInt("customer_id");
        String first_name = rs1.getString("first_name");
        String last_name = rs1.getString("last_name");
        String email = rs1.getString("email");
        int address_id = rs1.getInt("address_id");
        int active = rs1.getInt("active");
        String create_date = rs1.getString("create_date");
        String sub_type = rs1.getString("subscription_type");
        data[i][0] = id + "";
        data[i][1] = first_name;
        data[i][2] = last_name;
        data[i][3] = email;
        data[i][4] = address_id + "";
        data[i][5] = active + "";
        data[i][6] = create_date;
        data[i][7] = sub_type;
        i++;
        }
           
        DefaultTableModel model = new DefaultTableModel(data, columns);                       
        JTable table = new JTable(model);   
      table.getTableHeader().setReorderingAllowed(false);  
      table.setDefaultEditor(Object.class, null);                              // kanei ton pinaka mi-editible
      table.getColumnModel().getColumn(0).setPreferredWidth(85);
      table.getColumnModel().getColumn(1).setPreferredWidth(175);
      table.getColumnModel().getColumn(2).setPreferredWidth(200);
      table.getColumnModel().getColumn(3).setPreferredWidth(250);
      table.getColumnModel().getColumn(6).setPreferredWidth(150);
      table.getColumnModel().getColumn(7).setPreferredWidth(125);
      table.setPreferredScrollableViewportSize(table.getPreferredSize());       
      table.setShowGrid(true);
      table.setShowVerticalLines(true);
      JScrollPane pane = new JScrollPane(table);
      JFrame f = new JFrame("Customer_List");
      JPanel panel = new JPanel();
      panel.add(pane);
      f.add(panel);
      f.setSize(1250, 630);
      f.setVisible(true);
       initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        f.setLocation(size.width/6-getWidth()/4,size.height/4-getHeight()/3);
      
         table.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
             if(e.getClickCount() ==2)
             {try{
               JTable jtable = (JTable)e.getSource(); 
               int row= jtable.getSelectedRow();
               String c_id= (String)jtable.getValueAt(row,0);
               switch(jtable.getSelectedColumn()){
                   case 1:                                                      // update sto onoma
                      String cname= JOptionPane.showInputDialog(null, "Enter new name: ");
                      if(cname==null)
                      {}
                      else if(cname.length()==0)
                        {JOptionPane.showMessageDialog(null,"Name can't be blank! Cancelling update!");}
                      else{
                      String sql1="update customer set first_name=? where customer_id=?";
                      PreparedStatement pst1 = con.prepareStatement(sql1);
                      pst1.setString(1,cname);
                      pst1.setString(2,c_id);
                      pst1.execute();
                      JOptionPane.showMessageDialog(null,"Succesful update!");}
                   break;
                   case 2:                                                      // update to epwnimo
                       String clastname= JOptionPane.showInputDialog(null, "Enter new last name: ");
                      if(clastname==null)
                      {}
                      else if(clastname.length()==0)
                        {JOptionPane.showMessageDialog(null,"Last name can't be blank! Cancelling update!");}
                      else{
                      String sql1="update customer set last_name=? where customer_id=?";
                      PreparedStatement pst1 = con.prepareStatement(sql1);
                      pst1.setString(1,clastname);
                      pst1.setString(2,c_id);
                      pst1.execute();
                      JOptionPane.showMessageDialog(null,"Succesful update!");}
                    break; 
                    case 4:                                                     // update tin dieuthinsi
                    String sql2 = "select address_id from address";     
                    PreparedStatement pst2 = con.prepareStatement(sql2);
                    ResultSet rs2 =pst2.executeQuery();
                     
                    int count1=0;
                    while(rs2.next())
                      {count1++;}
                    String columns1[]={"Address_Id"};
                    String data1[][]= new String[count1][1];
                    
                    PreparedStatement pst3 = con.prepareStatement(sql2);
                    ResultSet rs3 =pst3.executeQuery();
                    int i=0;
                    while (rs3.next()) {
                      int add_id = rs3.getInt("address_id");
                      data1[i][0] = add_id + "";
                      i++;}

                    DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
                    JTable table1 = new JTable(model1);                
                    table1.getTableHeader().setReorderingAllowed(false);          
                    table1.setDefaultEditor(Object.class, null);                ///kanei ton pinaka mi-editable
                    table1.setPreferredScrollableViewportSize(table1.getPreferredSize());
                    table1.setShowGrid(true);
                    table1.setShowVerticalLines(true);
                    JScrollPane pane1 = new JScrollPane(table1);
                    JFrame f1 = new JFrame("Select new address id:");
                    JPanel panel1 = new JPanel();
                    panel1.add(pane1);
                    f1.add(panel1);
                    f1.setSize(400, 150);
                    f1.setVisible(true);
                    initComponents();
                    Toolkit toolkit1=getToolkit();
                    Dimension size1= toolkit1.getScreenSize();
                    f1.setLocation(size1.width/2-getWidth()/4,size1.height/2-getHeight()/2);
                       
                    table1.addMouseListener(new MouseAdapter(){
                    public void mouseClicked(MouseEvent e1) {                   // kanei override tis public methodou
                    if(e1.getClickCount() ==2)
                    {try{
                    f1.setVisible(false);
                    JTable jtable1 = (JTable)e1.getSource();  
                    int row= jtable1.getSelectedRow();
                    String cadd_id= (String)jtable1.getValueAt(row,0);
                    
                    String sql1="update customer set address_id=? where customer_id=?";
                      PreparedStatement pst1 = con.prepareStatement(sql1);
                      pst1.setString(1,cadd_id);
                      pst1.setString(2,c_id);
                      pst1.execute();
                      JOptionPane.showMessageDialog(null,"Succesful update!");
                    }catch(Exception e){
                    JOptionPane.showMessageDialog(null,e);
                     }    
                    }}});
                    break;    
                    case 5:                                                     // update to active
                    String columns3[]={"Active_Type"};
                    String data3[][]= new String[2][1];
                    data3[0][0]= "0";
                    data3[1][0]="1";
                      
                    DefaultTableModel model3 = new DefaultTableModel(data3, columns3); 
                    JTable table3 = new JTable(model3); 
                    table3.setDefaultEditor(Object.class, null);                // kanei ton pinaka mi-editible
                    table3.getTableHeader().setReorderingAllowed(false);                       
                    table3.setPreferredScrollableViewportSize(table3.getPreferredSize());
                    table3.setShowGrid(true);
                    table3.setShowVerticalLines(true);
                    JScrollPane pane3 = new JScrollPane(table3);
                    JFrame f3 = new JFrame("Choose active type:");
                    JPanel panel3 = new JPanel();
                    panel3.add(pane3);
                    f3.add(panel3);
                    f3.setSize(600, 150);
                    f3.setVisible(true);
                    initComponents();
                    Toolkit toolkit3=getToolkit();
                    Dimension size3= toolkit3.getScreenSize();
                    f3.setLocation(size3.width/2-getWidth()/3,size3.height/2-getHeight()/5);
                      
                     table3.addMouseListener(new MouseAdapter(){                 // mouseListener gia to subscription type
         public void mouseClicked(MouseEvent e3) {                              // kanei override tis public methodou
                    if(e3.getClickCount()==2)
                    {try{
                     f3.setVisible(false);
                    JTable jtable3 = (JTable)e3.getSource();  
                    if(jtable3.getSelectedRow()==0)                             // an dialeksei tipo M
                    {c_act="0";}  
                    else if(jtable3.getSelectedRow()==1)
                     {c_act="1";}
                    
                    String sql1="update customer set active=? where customer_id=?";
                    PreparedStatement pst1 = con.prepareStatement(sql1);
                    pst1.setString(1,c_act);
                    pst1.setString(2,c_id);
                    pst1.execute();
                    JOptionPane.showMessageDialog(null,"Succesful update!");}
                    catch(Exception ex){
                    JOptionPane.showMessageDialog(null,ex);
                    } 
                    }}});  
                    break; 
                    case 7:
                    String columns2[]={"Subscription_Type"};
                    String data2[][]= new String[3][1];
                    data2[0][0]= "M";
                    data2[1][0]="MS";
                    data2[2][0]="S";
                    
                    DefaultTableModel model2 = new DefaultTableModel(data2, columns2); 
                    JTable table2 = new JTable(model2); 
                    table2.setDefaultEditor(Object.class, null);                // kanei ton pinaka mi-editible
                    table2.getTableHeader().setReorderingAllowed(false);                       
                    table2.setPreferredScrollableViewportSize(table2.getPreferredSize());
                    table2.setShowGrid(true);
                    table2.setShowVerticalLines(true);
                    JScrollPane pane2 = new JScrollPane(table2);
                    JFrame f2 = new JFrame("Choose subscription type:");
                    JPanel panel2 = new JPanel();
                    panel2.add(pane2);
                    f2.add(panel2);
                    f2.setSize(600, 150);
                    f2.setVisible(true);
                    initComponents();
                    Toolkit toolkit2=getToolkit();
                    Dimension size2= toolkit2.getScreenSize();
                    f2.setLocation(size2.width/2-getWidth()/3,size2.height/2-getHeight()/5);
                    
                    table2.addMouseListener(new MouseAdapter(){                 // mouseListener gia to subscription type
         public void mouseClicked(MouseEvent e1) {                              // kanei override tis public methodou
                    if(e1.getClickCount()==2)
                    {
                     f2.setVisible(false);   
                     JTable jtable2 = (JTable)e1.getSource();  
                    if(jtable2.getSelectedRow()==0)                             // an dialeksei tipo M
                    {ctype="M";}  
                    else if(jtable2.getSelectedRow()==1)                        // an dialeksei tipo MS
                    {ctype="MS";}
                    else if(jtable2.getSelectedRow()==2)                        // an dialeksei tipo MS
                    {ctype="S";}
                     
                    try{
                    String sql1="update customer set subscription_type=? where customer_id=?";
                      PreparedStatement pst1 = con.prepareStatement(sql1);
                      pst1.setString(1,ctype);
                      pst1.setString(2,c_id);
                      pst1.execute();
                      JOptionPane.showMessageDialog(null,"Succesful update!");}
                     catch(Exception e){
                    JOptionPane.showMessageDialog(null,e);
                    }    
                    }}});
                    break;    
                    default: 
                        }
               }
                 catch(Exception ex){
                 JOptionPane.showMessageDialog(null,ex);
                } 
              }
           }
         });    
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }              
    }                                             

    private void updatetablesActionPerformed(java.awt.event.ActionEvent evt) {                                             
        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");
        
        String columns[]={"Available_Tables"};
        String data[][]=new String[14][1];
        data[0][0]= "Actor";
        data[1][0]= "Film_Actor";
        data[2][0]= "Series_Actor";
        data[3][0]= "Film";
        data[4][0]= "Series";
        data[5][0]= "Language";
        data[6][0]= "Category";
        data[7][0]= "Film_Category";
        data[8][0]= "Series_Category";
        data[9][0]= "Address";
        data[10][0]= "City";
        data[11][0]= "Country";
        data[12][0]= "Film_Inventory";
        data[13][0]= "Series_Inventory";
        
       DefaultTableModel model = new DefaultTableModel(data, columns); 
       JTable table = new JTable(model); 
       table.setDefaultEditor(Object.class, null);                              // kanei ton pinaka mi-editible
       table.getTableHeader().setReorderingAllowed(false);                       
       table.setShowGrid(true);
       table.setShowVerticalLines(true);
       JScrollPane pane = new JScrollPane(table);
       JFrame f = new JFrame("Select table to update: ");
       JPanel panel = new JPanel();
       panel.add(pane);
       f.add(panel);
       f.setSize(650, 300);
       f.setVisible(true);
       initComponents();
       Toolkit toolkit=getToolkit();
       Dimension size= toolkit.getScreenSize();
       f.setLocation(size.width/2-getWidth()/3,size.height/2-getHeight()/2);
       
       table.addMouseListener(new MouseAdapter(){                               // epilogi pinaka
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
             if(e.getClickCount() ==2)
             { 
               try{
               JTable jtable = (JTable)e.getSource();
               switch(jtable.getSelectedRow()){
                   case 0:                                                      // gia pinaka actor
                      String sql1 = "select * from actor";     
                      PreparedStatement pst1 = con.prepareStatement(sql1);
                      ResultSet rs1 =pst1.executeQuery();
                      
                      int count1=0;
                      while(rs1.next())
                      {count1++;}
                      
                      String columns1[]={"Actor_Id","First_Name","Last_Name"};
                      String data1[][]=new String[count1][3];
                      
                      PreparedStatement pst11 = con.prepareStatement(sql1);
                    ResultSet rs11 =pst11.executeQuery();
                    int i=0;
                    while (rs11.next()) {
                      int a_id = rs11.getInt("actor_id");
                      String aname= rs11.getString("first_name");
                      String alname= rs11.getString("last_name");
                      
                      data1[i][0] = a_id + "";
                      data1[i][1] = aname;
                      data1[i][2] = alname;
                      i++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model1 = new DefaultTableModel(data1, columns1); 
                      JTable table1 = new JTable(model1); 
                      table1.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table1.getTableHeader().setReorderingAllowed(false);                       
                      table1.setShowGrid(true);
                      table1.setShowVerticalLines(true);
                      JScrollPane pane1 = new JScrollPane(table1);
                      JFrame f1 = new JFrame("Choose actor to update: ");
                      JPanel panel1 = new JPanel();
                      panel1.add(pane1);
                      f1.add(panel1);
                      f1.setSize(600, 250);
                      f1.setVisible(true);
                      initComponents();
                      Toolkit toolkit1=getToolkit();
                      Dimension size1= toolkit1.getScreenSize();
                      f1.setLocation(size1.width/2-getWidth()/4,size1.height/2-getHeight()/2);
       
                    table1.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e1) {                // kanei override tis public methodou
                          if(e1.getClickCount() ==2)
                            {try{  
                             JTable jtable1 = (JTable)e1.getSource();
                            int row= jtable1.getSelectedRow();
                            String ac_id= (String)jtable1.getValueAt(row,0);
                            
                            if(jtable1.getSelectedColumn()==0){                 // an dialeksei update sto onoma
                            String aname= JOptionPane.showInputDialog(null, "Enter new first name: ");
                            if(aname ==null){                                   // an patithei "x" i "cancel"
                              JOptionPane.showMessageDialog(null,"Cancelling update!");}
                           else if(aname.length()==0)                           // an dothei keno orisma 
                             {JOptionPane.showMessageDialog(null,"Name can't be blank! Cancelling update!");}
                            else{
                            String sql1 = "update actor set first_name=? where actor_id=?";    
                            PreparedStatement pst1=con.prepareStatement(sql1);
                            pst1.setString(1,aname);
                            pst1.setString(2,ac_id);
                            pst1.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");}}
                            
                            else if(jtable1.getSelectedColumn()==2){            // an dialeksei update sto epwnimo
                             String alname= JOptionPane.showInputDialog(null, "Enter new last name: ");
                             if(alname ==null){                                 // an patithei "x" i "cancel"
                              JOptionPane.showMessageDialog(null,"Cancelling update!");}
                            else if(alname.length()==0)                         // an dothei keno orisma                            
                             {JOptionPane.showMessageDialog(null,"Last name can't be blank! Cancelling update!");}
                            else{
                            String sql1 = "update actor set last_name=? where actor_id=?";    
                            PreparedStatement pst1=con.prepareStatement(sql1);
                            pst1.setString(1,alname);
                            pst1.setString(2,ac_id);
                            pst1.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");}
                            }
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});
                   break; 
                   case 1:                                                      // gia pinaka film_actor
                     String sql2 = "select * from film_actor order by actor_id";     
                      PreparedStatement pst2 = con.prepareStatement(sql2);
                      ResultSet rs2 =pst2.executeQuery();
                      
                      int count2=0;
                      while(rs2.next())
                      {count2++;}
                      
                      String columns2[]={"Actor_Id","Film_Id"};
                      String data2[][]=new String[count2][2];
                      
                      PreparedStatement pst21 = con.prepareStatement(sql2);
                    ResultSet rs21 =pst21.executeQuery();
                    int i2=0;
                    while (rs21.next()) {
                      int aa_id = rs21.getInt("actor_id");
                      String afname= rs21.getString("film_id");
                      
                      data2[i2][0] = aa_id + "";
                      data2[i2][1] = afname;
                      i2++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model2 = new DefaultTableModel(data2, columns2); 
                      JTable table2 = new JTable(model2); 
                      table2.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table2.getTableHeader().setReorderingAllowed(false);                       
                      table2.setShowGrid(true);
                      table2.setShowVerticalLines(true);
                      JScrollPane pane2 = new JScrollPane(table2);
                      JFrame f2 = new JFrame("Choose film actor to update: ");
                      JPanel panel2 = new JPanel();
                      panel2.add(pane2);
                      f2.add(panel2);
                      f2.setSize(500, 250);
                      f2.setVisible(true);
                      initComponents();
                      Toolkit toolkit2=getToolkit();
                      Dimension size2= toolkit2.getScreenSize();
                      f2.setLocation(size2.width/2-getWidth()/4,size2.height/2-getHeight()/2);
       
                    table2.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e2) {                // kanei override tis public methodou
                          if(e2.getClickCount() ==2)
                            {try{  
                             JTable jtable2 = (JTable)e2.getSource();
                            int row2= jtable2.getSelectedRow();
                            String fa_id= (String)jtable2.getValueAt(row2,0);
                            String fa_fid= (String)jtable2.getValueAt(row2,1);
                            
                            if(jtable2.getSelectedColumn()==0){                 // an dialeksei update sto actor_id
                               
                             String sql22 = "select actor_id from actor order by actor_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Actor_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("actor_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new actor id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 250);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update film_actor set actor_id=? where film_actor.actor_id=? and film_actor.film_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.setString(3,fa_fid);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});  
                            }
                            
                            else if(jtable2.getSelectedColumn()==1){            // an dialeksei update sto film_id
                            String sql22 = "select film_id from film order by film_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Film_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("film_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new film id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 250);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update film_actor set film_id=? where film_actor.actor_id=? and film_actor.film_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.setString(3,fa_fid);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});
                            }
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});
                   break;
                   case 2:                                                      // gia pinaka series_actor
                      String sql3 = "select * from series_actor order by actor_id";     
                      PreparedStatement pst3 = con.prepareStatement(sql3);
                      ResultSet rs3 =pst3.executeQuery();
                      
                      int count3=0;
                      while(rs3.next())
                      {count3++;}
                      
                      String columns3[]={"Actor_Id","Series_Id"};
                      String data3[][]=new String[count3][2];
                      
                      PreparedStatement pst31 = con.prepareStatement(sql3);
                    ResultSet rs31 =pst31.executeQuery();
                    int i3=0;
                    while (rs31.next()) {
                      int aa_id = rs31.getInt("actor_id");
                      String asname= rs31.getString("series_id");
                      
                      data3[i3][0] = aa_id + "";
                      data3[i3][1] = asname;
                      i3++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model3 = new DefaultTableModel(data3, columns3); 
                      JTable table3 = new JTable(model3); 
                      table3.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table3.getTableHeader().setReorderingAllowed(false);                       
                      table3.setShowGrid(true);
                      table3.setShowVerticalLines(true);
                      JScrollPane pane3 = new JScrollPane(table3);
                      JFrame f3 = new JFrame("Choose series actor to update: ");
                      JPanel panel3 = new JPanel();
                      panel3.add(pane3);
                      f3.add(panel3);
                      f3.setSize(500, 250);
                      f3.setVisible(true);
                      initComponents();
                      Toolkit toolkit3=getToolkit();
                      Dimension size3= toolkit3.getScreenSize();
                      f3.setLocation(size3.width/2-getWidth()/4,size3.height/2-getHeight()/2);
       
                    table3.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e2) {                // kanei override tis public methodou
                          if(e2.getClickCount() ==2)
                            {try{  
                             JTable jtable2 = (JTable)e2.getSource();
                            int row2= jtable2.getSelectedRow();
                            String fa_id= (String)jtable2.getValueAt(row2,0);
                            String fa_fid= (String)jtable2.getValueAt(row2,1);
                            
                            if(jtable2.getSelectedColumn()==0){                 // an dialeksei update sto actor_id
                               
                             String sql22 = "select actor_id from actor order by actor_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Actor_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("actor_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new actor id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 250);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update series_actor set actor_id=? where series_actor.actor_id=? and series_actor.series_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.setString(3,fa_fid);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});  
                            }
                            
                            else if(jtable2.getSelectedColumn()==1){            // an dialeksei update sto series_id
                            String sql22 = "select series_id from series order by series_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Series_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("series_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new series id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 250);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update series_actor set series_id=? where series_actor.actor_id=? and series_actor.series_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.setString(3,fa_fid);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});
                            }
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});
                   break;  
                   case 3:                                                      // gia pinaka film
                   String sql4 = "select * from film";     
                      PreparedStatement pst4 = con.prepareStatement(sql4);
                      ResultSet rs4 =pst4.executeQuery();
                      
                      int count4=0;
                      while(rs4.next())
                      {count4++;}
                      
                      String columns4[]={"Film_Id","Title","Description","Release_Year","Language_Id","Original_Language_Id","Length","Rating","Special features"};
                      String data4[][]=new String[count4][9];
                      
                      PreparedStatement pst41 = con.prepareStatement(sql4);
                    ResultSet rs41 =pst41.executeQuery();
                    int i4=0;
                    while (rs41.next()) {
                      int f_id = rs41.getInt("film_id");
                      String title= rs41.getString("title");
                      String desc= rs41.getString("description");
                      String re_year= rs41.getString("release_year");
                      int lan_id= rs41.getInt("language_id");
                      int olan_id= rs41.getInt("original_language_id");
                      int leng= rs41.getInt("length");
                      String rat= rs41.getString("rating");
                      String spf= rs41.getString("special_features");
                      
                      data4[i4][0] = f_id + "";
                      data4[i4][1] = title;
                      data4[i4][2] = desc;
                      data4[i4][3] = re_year;
                      data4[i4][4] = lan_id+"";
                      data4[i4][5] = olan_id+"";
                      data4[i4][6] = leng+"";
                      data4[i4][7] = rat;
                      data4[i4][8] = spf;
                      i4++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model4 = new DefaultTableModel(data4, columns4); 
                      JTable table4 = new JTable(model4); 
                      table4.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table4.getTableHeader().setReorderingAllowed(false);                       
                      table4.setShowGrid(true);
                      table4.setShowVerticalLines(true);
                      JScrollPane pane4 = new JScrollPane(table4);
                      JFrame f4 = new JFrame("Choose film to update: ");
                      JPanel panel4 = new JPanel();
                      panel4.add(pane4);
                      f4.add(panel4);
                      f4.setSize(1000, 250);
                      f4.setVisible(true);
                      initComponents();
                      Toolkit toolkit4=getToolkit();
                      Dimension size4= toolkit4.getScreenSize();
                      f4.setLocation(size4.width/2-getWidth()/2,size4.height/2-getHeight()/2);
       
                    table4.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e4) {                 // kanei override tis public methodou
                          if(e4.getClickCount() ==2)
                            {try{  
                             JTable jtable4 = (JTable)e4.getSource();
                            int row4= jtable4.getSelectedRow();
                            String l_id= (String)jtable4.getValueAt(row4,0);
                            
                            if(jtable4.getSelectedColumn()==1){                 // an dialeksei update sto title
                            String ftitle= JOptionPane.showInputDialog(null, "Enter new title: ");
                            if(ftitle ==null){                                   // an patithei "x" i "cancel"
                              JOptionPane.showMessageDialog(null,"Cancelling update!");}
                           else if(ftitle.length()==0)                           // an dothei keno orisma 
                             {JOptionPane.showMessageDialog(null,"Title can't be blank! Cancelling update!");}
                            else{
                            String sql4 = "update film set title=? where film_id=?";    
                            PreparedStatement pst4=con.prepareStatement(sql4);
                            pst4.setString(1,ftitle);
                            pst4.setString(2,l_id);
                            pst4.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");}}
                            
                            else if(jtable4.getSelectedColumn()==2){            // an dialeksei update sto description
                            String descr= JOptionPane.showInputDialog(null, "Enter new film description (optional): ");
                            
                            if(descr==null)
                            {JOptionPane.showMessageDialog(null,"Cancelling update!");}
                            else{
                            String sql41 = "update film set description=? where film_id=?";    
                            PreparedStatement pst41=con.prepareStatement(sql41);
                            pst41.setString(1,descr);
                            pst41.setString(2,l_id);
                            pst41.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            }}
                            else if(jtable4.getSelectedColumn()==3){           // an dialeksei update sto release year
                            String fry= JOptionPane.showInputDialog(null, "Enter new release year: ");
                            
                            if(fry ==null){                                   // an patithei "x" i "cancel"
                              JOptionPane.showMessageDialog(null,"Cancelling update!");}
                            else if(fry.length()==0)                           // an dothei keno orisma 
                             {JOptionPane.showMessageDialog(null,"Release year can't be blank! Cancelling update!");}
                            else{
                             
                             boolean num= fry.matches("[0-9]+");
                             if(num==false)    
                              {JOptionPane.showMessageDialog(null,"Release year must only contain numbers!");}
                             else if(fry.length()!=4)
                             {JOptionPane.showMessageDialog(null,"Wrong length for release year!");}
                             else if(Integer.parseInt(fry)<0)
                               {JOptionPane.showMessageDialog(null,"Release year can't be negative!");}  
                            else{     
                            String sql4 = "update film set release_year=? where film_id=?";    
                            PreparedStatement pst4=con.prepareStatement(sql4);
                            pst4.setString(1,fry);
                            pst4.setString(2,l_id);
                            pst4.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");}}
                            }
                            
                            else if(jtable4.getSelectedColumn()==4){            // an kanei update sto language_id
                             String sql42 = "select * from language";     
                            PreparedStatement pst42 = con.prepareStatement(sql42);
                            ResultSet rs42 =pst42.executeQuery();
                      
                      int count42=0;
                      while(rs42.next())
                      {count42++;}
                      
                      String columns42[]={"Language_ID"};
                      String data42[][]=new String[count42][1];
                      
                      PreparedStatement pst43 = con.prepareStatement(sql42);
                    ResultSet rs43 =pst43.executeQuery();
                    int i43=0;
                    while (rs43.next()) {
                      int fl_id = rs43.getInt("language_id");
                     
                      data42[i43][0] = fl_id + "";
                      i43++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model4 = new DefaultTableModel(data42, columns42); 
                      JTable table4 = new JTable(model4); 
                      table4.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table4.getTableHeader().setReorderingAllowed(false);                       
                      table4.setShowGrid(true);
                      table4.setShowVerticalLines(true);
                      JScrollPane pane4 = new JScrollPane(table4);
                      JFrame f4 = new JFrame("Choose new language: ");
                      JPanel panel4 = new JPanel();
                      panel4.add(pane4);
                      f4.add(panel4);
                      f4.setSize(600, 250);
                      f4.setVisible(true);
                      initComponents();
                      Toolkit toolkit4=getToolkit();
                      Dimension size4= toolkit4.getScreenSize();
                      f4.setLocation(size4.width/2-getWidth()/4,size4.height/2-getHeight()/2);
       
                    table4.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e4) {                 // kanei override tis public methodou
                          if(e4.getClickCount() ==2)
                            {try{  
                             JTable jtable4 = (JTable)e4.getSource();
                            int row4= jtable4.getSelectedRow();
                            String fl_id2= (String)jtable4.getValueAt(row4,0);
                            
                            String sql44= "update film set language_id=? where film_id=?";
                            PreparedStatement pst44=con.prepareStatement(sql44);
                            pst44.setString(1,fl_id2);
                            pst44.setString(2,l_id);
                            pst44.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f4.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }}); 
                            }
                            
                            else if(jtable4.getSelectedColumn()==5)             // an kanei update sto original_language_id
                            {
                             String sql42 = "select * from language";     
                            PreparedStatement pst42 = con.prepareStatement(sql42);
                            ResultSet rs42 =pst42.executeQuery();
                      
                      int count42=0;
                      while(rs42.next())
                      {count42++;}
                      
                      String columns42[]={"Original_Language_ID"};
                      String data42[][]=new String[count42][1];
                      
                      PreparedStatement pst43 = con.prepareStatement(sql42);
                    ResultSet rs43 =pst43.executeQuery();
                    int i43=0;
                    while (rs43.next()) {
                      int fl_id = rs43.getInt("language_id");
                     
                      data42[i43][0] = fl_id + "";
                      i43++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model4 = new DefaultTableModel(data42, columns42); 
                      JTable table4 = new JTable(model4); 
                      table4.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table4.getTableHeader().setReorderingAllowed(false);                       
                      table4.setShowGrid(true);
                      table4.setShowVerticalLines(true);
                      JScrollPane pane4 = new JScrollPane(table4);
                      JFrame f4 = new JFrame("Choose new original language: ");
                      JPanel panel4 = new JPanel();
                      panel4.add(pane4);
                      f4.add(panel4);
                      f4.setSize(600, 250);
                      f4.setVisible(true);
                      initComponents();
                      Toolkit toolkit4=getToolkit();
                      Dimension size4= toolkit4.getScreenSize();
                      f4.setLocation(size4.width/2-getWidth()/4,size4.height/2-getHeight()/2);
       
                    table4.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e4) {                 // kanei override tis public methodou
                          if(e4.getClickCount() ==2)
                            {try{  
                             JTable jtable4 = (JTable)e4.getSource();
                            int row4= jtable4.getSelectedRow();
                            String fl_id2= (String)jtable4.getValueAt(row4,0);
                            
                            String sql44= "update film set original_language_id=? where film_id=?";
                            PreparedStatement pst44=con.prepareStatement(sql44);
                            pst44.setString(1,fl_id2);
                            pst44.setString(2,l_id);
                            pst44.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f4.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});    
                            }
                            else if(jtable4.getSelectedColumn()==6){            // an kanei update sto length
                            String flen= JOptionPane.showInputDialog(null, "Enter new film length (in minutes): ");
                             
                            if(flen==null)                                      // an patithei to "cancel" i to "x"
                             {JOptionPane.showMessageDialog(null,"Cancelling update!");}
                            else if(flen.length()==0)                          // an patithei to "ok" xvris na exei dothei timi
                          {JOptionPane.showMessageDialog(null,"Film length can't be blank, unsuccesful update!");}                                          
                         else if(Double.parseDouble(flen) <=0)                  // an dothei arnitiki i mideniki timi
                    {JOptionPane.showMessageDialog(null,"Film length can't be negative or zero, unsuccesful update!");}                                           
                     else{
                    String sql= "update film set length=? where film_id=?";
                    PreparedStatement pst=con.prepareStatement(sql);
                    pst.setString(1,flen);
                    pst.setString(2,l_id);
                    pst.execute();
                    JOptionPane.showMessageDialog(null,"Succesful update!");}
                            }
                    else if(jtable4.getSelectedColumn()==7){                    // an kanei update sto rating   
                                    String columns[] = {"Available Ratings "};
                           String data[][] = new String[5][1];
                        data[0][0] = "G";
                        data[1][0] = "PG";
                        data[2][0] = "PG-13";
                        data[3][0] = "R";
                        data[4][0] = "NC-17";
            
                        DefaultTableModel model = new DefaultTableModel(data, columns); 
                        JTable table = new JTable(model); 
                        table.setDefaultEditor(Object.class, null);             // kanei ton pinaka mi-editible
                        table.getTableHeader().setReorderingAllowed(false);                       
                        table.setShowGrid(true);
                        table.setShowVerticalLines(true);
                        JScrollPane pane = new JScrollPane(table);
                        JFrame f = new JFrame("Select new rating: ");
                        JPanel panel = new JPanel();
                        panel.add(pane);
                        f.add(panel);
                        f.setSize(400, 150);
                        f.setVisible(true);
                        initComponents();
                        Toolkit toolkit=getToolkit();
                        Dimension size= toolkit.getScreenSize();
                        f.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/3); 
       
                        table.addMouseListener(new MouseAdapter(){
                        public void mouseClicked(MouseEvent e) {                // kanei override tis public methodou
                        try{
                        if(e.getClickCount() ==2)
                        {
                        JTable jtable = (JTable)e.getSource();
                        int row= jtable.getSelectedRow();
                        String frat= (String)jtable.getValueAt(row,0);
                        
                        String sql= "update film set rating=? where film_id=?";
                        PreparedStatement pst=con.prepareStatement(sql);
                        pst.setString(1,frat);
                        pst.setString(2,l_id);
                        pst.execute();
                        JOptionPane.showMessageDialog(null,"Succesful update!");
                        }}
                          catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }         
                            }});  
                        
                        }   
                         else if(jtable4.getSelectedColumn()==8){                // an kanei update sto special features  
                           String columns[] = {"Available Special Feature Combinations "};
                           String data[][] = new String[16][1];
                        data[0][0] = null;   
                        data[1][0] = "Trailers";                                //antistoixei stin timi 1
                        data[2][0] = "Commentaries";                            //antistoixei stin timi 2
                        data[3][0] = "Trailers, Commentaries";                  //antistoixei sto athroisma twn 2, ara 3
                        data[4][0] = "Deleted Scenes";                          //antistoixei stin timi 4
                        data[5][0] = "Trailers, Deleted Scenes";
                        data[6][0] = "Commentaries, Deleted Scenes";
                        data[7][0] = "Trailers, Commentaries, Deleted Scenes";
                        data[8][0] = "Behind the Scenes";
                        data[9][0] = "Trailers, Behind the Scenes";
                        data[10][0] = "Commentaries, Behind the Scenes";
                        data[11][0] = "Trailers, Commentaries, Behind the Scenes";
                        data[12][0] = "Deleted Scenes, Behind the Scenes";
                        data[13][0] = "Trailers, Deleted Scenes, Behind the Scenes";
                        data[14][0] = "Commentaries, Deleted Scenes, Behind the Scenes";
                        data[15][0] = "Trailers, Commentaries, Deleted Scenes, Behind the Scenes";
                        
                        DefaultTableModel model = new DefaultTableModel(data, columns); 
                        JTable table = new JTable(model); 
                        table.setDefaultEditor(Object.class, null);             // kanei ton pinaka mi-editible
                        table.getTableHeader().setReorderingAllowed(false);                       
                        table.setShowGrid(true);
                        table.setShowVerticalLines(true);
                        JScrollPane pane = new JScrollPane(table);
                        JFrame f = new JFrame("Select special features: ");
                        JPanel panel = new JPanel();
                        panel.add(pane);
                        f.add(panel);
                        f.setSize(600, 350);
                        f.setVisible(true);
                        initComponents();
                        Toolkit toolkit=getToolkit();
                        Dimension size= toolkit.getScreenSize();
                        f.setLocation(size.width/2-getWidth()/4,size.height/2-getHeight()/3); 
       
                        table.addMouseListener(new MouseAdapter(){
                        public void mouseClicked(MouseEvent e) {                // kanei override tis public methodou
                        try{
                        if(e.getClickCount() ==2)
                        {
                        JTable jtable = (JTable)e.getSource();
                        int row= jtable.getSelectedRow();
                        
                        String sql= "update film set special_features=? where film_id=?";
                        PreparedStatement pst=con.prepareStatement(sql);
                        pst.setString(1,row+"");
                        pst.setString(2,l_id);
                        pst.execute();
                        JOptionPane.showMessageDialog(null,"Succesful update!");
                        f.setVisible(false);
                        }}
                          catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }         
                            }});  
                        
                        }      
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});   
                   break;
                   case 4:                                                      // gia pinaka series
                       String sql5 = "select * from series";     
                      PreparedStatement pst5 = con.prepareStatement(sql5);
                      ResultSet rs5 =pst5.executeQuery();
                      
                      int count5=0;
                      while(rs5.next())
                      {count5++;}
                      
                      String columns5[]={"Series_Id","Title","Description","Release_Year","Language_Id","Original_Language_Id","Episodes","Episode_Length","Seasons","Rating","Special features"};
                      String data5[][]=new String[count5][11];
                      
                      PreparedStatement pst51 = con.prepareStatement(sql5);
                    ResultSet rs51 =pst51.executeQuery();
                    int i5=0;
                    while (rs51.next()) {
                      int f_id = rs51.getInt("series_id");
                      String title= rs51.getString("title");
                      String desc= rs51.getString("description");
                      String re_year= rs51.getString("release_year");
                      int lan_id= rs51.getInt("language_id");
                      int olan_id= rs51.getInt("original_language_id");
                      int ep= rs51.getInt("episodes");
                      int leng= rs51.getInt("episode_length");
                      int seas= rs51.getInt("seasons");
                      String rat= rs51.getString("rating");
                      String spf= rs51.getString("special_features");
                      
                      data5[i5][0] = f_id + "";
                      data5[i5][1] = title;
                      data5[i5][2] = desc;
                      data5[i5][3] = re_year;
                      data5[i5][4] = lan_id+"";
                      data5[i5][5] = olan_id+"";
                      data5[i5][6] = ep+"";
                      data5[i5][7] = leng+"";
                      data5[i5][8] = seas+"";
                      data5[i5][9] = rat;
                      data5[i5][10] = spf;
                      i5++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model5 = new DefaultTableModel(data5, columns5); 
                      JTable table5 = new JTable(model5); 
                      table5.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table5.getTableHeader().setReorderingAllowed(false);                       
                      table5.setShowGrid(true);
                      table5.setShowVerticalLines(true);
                      JScrollPane pane5 = new JScrollPane(table5);
                      JFrame f5 = new JFrame("Choose series to update: ");
                      JPanel panel5 = new JPanel();
                      panel5.add(pane5);
                      f5.add(panel5);
                      f5.setSize(1000, 250);
                      f5.setVisible(true);
                      initComponents();
                      Toolkit toolkit5=getToolkit();
                      Dimension size5= toolkit5.getScreenSize();
                      f5.setLocation(size5.width/2-getWidth()/2,size5.height/2-getHeight()/2);
       
                    table5.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e5) {                 // kanei override tis public methodou
                          if(e5.getClickCount() ==2)
                            {try{  
                             JTable jtable5 = (JTable)e5.getSource();
                            int row5= jtable5.getSelectedRow();
                            String l_id= (String)jtable5.getValueAt(row5,0);
                            
                            if(jtable5.getSelectedColumn()==1){                 // an dialeksei update sto title
                            String stitle= JOptionPane.showInputDialog(null, "Enter new title: ");
                            if(stitle ==null){                                   // an patithei "x" i "cancel"
                              JOptionPane.showMessageDialog(null,"Cancelling update!");}
                           else if(stitle.length()==0)                           // an dothei keno orisma 
                             {JOptionPane.showMessageDialog(null,"Title can't be blank! Cancelling update!");}
                            else{
                            String sql5 = "update series set title=? where series_id=?";    
                            PreparedStatement pst5=con.prepareStatement(sql5);
                            pst5.setString(1,stitle);
                            pst5.setString(2,l_id);
                            pst5.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");}}
                            
                            else if(jtable5.getSelectedColumn()==2){            // an dialeksei update sto description
                            String descr= JOptionPane.showInputDialog(null, "Enter new series description (optional): ");
                            
                            if(descr==null)
                            {JOptionPane.showMessageDialog(null,"Cancelling update!");}
                            else{
                            String sql51 = "update series set description=? where series_id=?";    
                            PreparedStatement pst51=con.prepareStatement(sql51);
                            pst51.setString(1,descr);
                            pst51.setString(2,l_id);
                            pst51.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            }}
                            else if(jtable5.getSelectedColumn()==3){           // an dialeksei update sto release year
                            String fry= JOptionPane.showInputDialog(null, "Enter new release year: ");
                            
                            if(fry ==null){                                   // an patithei "x" i "cancel"
                              JOptionPane.showMessageDialog(null,"Cancelling update!");}
                            else if(fry.length()==0)                           // an dothei keno orisma 
                             {JOptionPane.showMessageDialog(null,"Release year can't be blank! Cancelling update!");}
                            else{
                             
                             boolean num= fry.matches("[0-9]+");
                             if(num==false)    
                              {JOptionPane.showMessageDialog(null,"Release year must only contain numbers!");}
                             else if(fry.length()!=4)
                             {JOptionPane.showMessageDialog(null,"Wrong length for release year!");}
                            else if(Integer.parseInt(fry)<0)
                               {JOptionPane.showMessageDialog(null,"Release year can't be negative!");} 
                            else{     
                            String sql5 = "update series set release_year=? where series_id=?";    
                            PreparedStatement pst5=con.prepareStatement(sql5);
                            pst5.setString(1,fry);
                            pst5.setString(2,l_id);
                            pst5.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");}}
                            }
                            
                            else if(jtable5.getSelectedColumn()==4){            // an kanei update sto language_id
                             String sql42 = "select * from language";     
                            PreparedStatement pst42 = con.prepareStatement(sql42);
                            ResultSet rs42 =pst42.executeQuery();
                      
                      int count42=0;
                      while(rs42.next())
                      {count42++;}
                      
                      String columns42[]={"Language_ID"};
                      String data42[][]=new String[count42][1];
                      
                      PreparedStatement pst43 = con.prepareStatement(sql42);
                    ResultSet rs43 =pst43.executeQuery();
                    int i43=0;
                    while (rs43.next()) {
                      int fl_id = rs43.getInt("language_id");
                     
                      data42[i43][0] = fl_id + "";
                      i43++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model4 = new DefaultTableModel(data42, columns42); 
                      JTable table4 = new JTable(model4); 
                      table4.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table4.getTableHeader().setReorderingAllowed(false);                       
                      table4.setShowGrid(true);
                      table4.setShowVerticalLines(true);
                      JScrollPane pane4 = new JScrollPane(table4);
                      JFrame f4 = new JFrame("Choose new language: ");
                      JPanel panel4 = new JPanel();
                      panel4.add(pane4);
                      f4.add(panel4);
                      f4.setSize(600, 250);
                      f4.setVisible(true);
                      initComponents();
                      Toolkit toolkit4=getToolkit();
                      Dimension size4= toolkit4.getScreenSize();
                      f4.setLocation(size4.width/2-getWidth()/4,size4.height/2-getHeight()/2);
       
                    table4.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e4) {                 // kanei override tis public methodou
                          if(e4.getClickCount() ==2)
                            {try{  
                             JTable jtable4 = (JTable)e4.getSource();
                            int row4= jtable4.getSelectedRow();
                            String fl_id2= (String)jtable4.getValueAt(row4,0);
                            
                            String sql44= "update series set language_id=? where series_id=?";
                            PreparedStatement pst44=con.prepareStatement(sql44);
                            pst44.setString(1,fl_id2);
                            pst44.setString(2,l_id);
                            pst44.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f4.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }}); 
                            }
                            
                            else if(jtable5.getSelectedColumn()==5)             // an kanei update sto original_language_id
                            {
                             String sql42 = "select * from language";     
                            PreparedStatement pst42 = con.prepareStatement(sql42);
                            ResultSet rs42 =pst42.executeQuery();
                      
                      int count42=0;
                      while(rs42.next())
                      {count42++;}
                      
                      String columns42[]={"Original_Language_ID"};
                      String data42[][]=new String[count42][1];
                      
                      PreparedStatement pst43 = con.prepareStatement(sql42);
                    ResultSet rs43 =pst43.executeQuery();
                    int i43=0;
                    while (rs43.next()) {
                      int fl_id = rs43.getInt("language_id");
                     
                      data42[i43][0] = fl_id + "";
                      i43++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model4 = new DefaultTableModel(data42, columns42); 
                      JTable table4 = new JTable(model4); 
                      table4.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table4.getTableHeader().setReorderingAllowed(false);                       
                      table4.setShowGrid(true);
                      table4.setShowVerticalLines(true);
                      JScrollPane pane4 = new JScrollPane(table4);
                      JFrame f4 = new JFrame("Choose new original language: ");
                      JPanel panel4 = new JPanel();
                      panel4.add(pane4);
                      f4.add(panel4);
                      f4.setSize(600, 250);
                      f4.setVisible(true);
                      initComponents();
                      Toolkit toolkit4=getToolkit();
                      Dimension size4= toolkit4.getScreenSize();
                      f4.setLocation(size4.width/2-getWidth()/4,size4.height/2-getHeight()/2);
       
                    table4.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e4) {                 // kanei override tis public methodou
                          if(e4.getClickCount() ==2)
                            {try{  
                             JTable jtable4 = (JTable)e4.getSource();
                            int row4= jtable4.getSelectedRow();
                            String fl_id2= (String)jtable4.getValueAt(row4,0);
                            
                            String sql44= "update series set original_language_id=? where series_id=?";
                            PreparedStatement pst44=con.prepareStatement(sql44);
                            pst44.setString(1,fl_id2);
                            pst44.setString(2,l_id);
                            pst44.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f4.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});    
                            }
                            else if(jtable5.getSelectedColumn()==6){            // an kanei update episodes
                            String epn= JOptionPane.showInputDialog(null, "Enter new number of episodes: ");
                            
                            if(epn ==null){                                   // an patithei "x" i "cancel"
                              JOptionPane.showMessageDialog(null,"Cancelling update!");}
                            else if(epn.length()==0)                           // an dothei keno orisma 
                             {JOptionPane.showMessageDialog(null,"Episode number can't be blank! Cancelling update!");}
                            else{
                             
                             boolean num= epn.matches("[0-9]+");
                             if(num==false)    
                              {JOptionPane.showMessageDialog(null,"Episode number must only contain numbers!");}
                             else if(Integer.parseInt(epn)<=0)
                             {JOptionPane.showMessageDialog(null,"Value can't be negative or zero!");}
                            else{     
                            String sql5 = "update series set episodes=? where series_id=?";    
                            PreparedStatement pst5=con.prepareStatement(sql5);
                            pst5.setString(1,epn);
                            pst5.setString(2,l_id);
                            pst5.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");}}
                            }
                            else if(jtable5.getSelectedColumn()==7){            // an kanei update sto episode_length
                            String elen= JOptionPane.showInputDialog(null, "Enter new episode length (in minutes): ");
                             
                            if(elen==null)                                      // an patithei to "cancel" i to "x"
                             {JOptionPane.showMessageDialog(null,"Cancelling update!");}
                            else if(elen.length()==0)                          // an patithei to "ok" xvris na exei dothei timi
                          {JOptionPane.showMessageDialog(null,"Episode length can't be blank, unsuccesful update!");}                                          
                         else if(Double.parseDouble(elen) <=0)                  // an dothei arnitiki i mideniki timi
                    {JOptionPane.showMessageDialog(null,"Episode length can't be negative or zero, unsuccesful update!");}                                           
                     else{
                    String sql= "update series set episode_length=? where series_id=?";
                    PreparedStatement pst=con.prepareStatement(sql);
                    pst.setString(1,elen);
                    pst.setString(2,l_id);
                    pst.execute();
                    JOptionPane.showMessageDialog(null,"Succesful update!");}
                            }
                    else if(jtable5.getSelectedRow()==8){                       // an kanei update sto seasons     
                          String sea= JOptionPane.showInputDialog(null, "Enter new number of seasons: ");
                             
                            if(sea==null)                                      // an patithei to "cancel" i to "x"
                             {JOptionPane.showMessageDialog(null,"Cancelling update!");}
                            else if(sea.length()==0)                          // an patithei to "ok" xvris na exei dothei timi
                          {JOptionPane.showMessageDialog(null,"Number of seasons can't be blank, unsuccesful update!");}                                          
                         else if(Double.parseDouble(sea) <=0)                  // an dothei arnitiki i mideniki timi
                    {JOptionPane.showMessageDialog(null,"Number of seasons can't be negative or zero, unsuccesful update!");}                                           
                     else{
                    String sql= "update series set seasons=? where series_id=?";
                    PreparedStatement pst=con.prepareStatement(sql);
                    pst.setString(1,sea);
                    pst.setString(2,l_id);
                    pst.execute();
                    JOptionPane.showMessageDialog(null,"Succesful update!");}      
                    }    
                    else if(jtable5.getSelectedColumn()==9){                    // an kanei update sto rating   
                           String columns[] = {"Available Ratings "};
                           String data[][] = new String[5][1];
                        data[0][0] = "G";
                        data[1][0] = "PG";
                        data[2][0] = "PG-13";
                        data[3][0] = "R";
                        data[4][0] = "NC-17";
            
                        DefaultTableModel model = new DefaultTableModel(data, columns); 
                        JTable table = new JTable(model); 
                        table.setDefaultEditor(Object.class, null);             // kanei ton pinaka mi-editible
                        table.getTableHeader().setReorderingAllowed(false);                       
                        table.setShowGrid(true);
                        table.setShowVerticalLines(true);
                        JScrollPane pane = new JScrollPane(table);
                        JFrame f = new JFrame("Select new rating: ");
                        JPanel panel = new JPanel();
                        panel.add(pane);
                        f.add(panel);
                        f.setSize(400, 150);
                        f.setVisible(true);
                        initComponents();
                        Toolkit toolkit=getToolkit();
                        Dimension size= toolkit.getScreenSize();
                        f.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/3); 
       
                        table.addMouseListener(new MouseAdapter(){
                        public void mouseClicked(MouseEvent e) {                // kanei override tis public methodou
                        try{
                        if(e.getClickCount() ==2)
                        {
                        JTable jtable = (JTable)e.getSource();
                        int row= jtable.getSelectedRow();
                        String frat= (String)jtable.getValueAt(row,0);
                        
                        String sql= "update series set rating=? where series_id=?";
                        PreparedStatement pst=con.prepareStatement(sql);
                        pst.setString(1,frat);
                        pst.setString(2,l_id);
                        pst.execute();
                        JOptionPane.showMessageDialog(null,"Succesful update!");
                        }}
                          catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }         
                            }});  
                        
                        }   
                         else if(jtable5.getSelectedColumn()==10){                // an kanei update sto special features  
                           String columns[] = {"Available Special Feature Combinations "};
                           String data[][] = new String[16][1];
                        data[0][0] = null;   
                        data[1][0] = "Trailers";                                //antistoixei stin timi 1
                        data[2][0] = "Commentaries";                            //antistoixei stin timi 2
                        data[3][0] = "Trailers, Commentaries";                  //antistoixei sto athroisma twn 2, ara 3
                        data[4][0] = "Deleted Scenes";                          //antistoixei stin timi 4
                        data[5][0] = "Trailers, Deleted Scenes";
                        data[6][0] = "Commentaries, Deleted Scenes";
                        data[7][0] = "Trailers, Commentaries, Deleted Scenes";
                        data[8][0] = "Behind the Scenes";
                        data[9][0] = "Trailers, Behind the Scenes";
                        data[10][0] = "Commentaries, Behind the Scenes";
                        data[11][0] = "Trailers, Commentaries, Behind the Scenes";
                        data[12][0] = "Deleted Scenes, Behind the Scenes";
                        data[13][0] = "Trailers, Deleted Scenes, Behind the Scenes";
                        data[14][0] = "Commentaries, Deleted Scenes, Behind the Scenes";
                        data[15][0] = "Trailers, Commentaries, Deleted Scenes, Behind the Scenes";
                        
                        DefaultTableModel model = new DefaultTableModel(data, columns); 
                        JTable table = new JTable(model); 
                        table.setDefaultEditor(Object.class, null);             // kanei ton pinaka mi-editible
                        table.getTableHeader().setReorderingAllowed(false);                       
                        table.setShowGrid(true);
                        table.setShowVerticalLines(true);
                        JScrollPane pane = new JScrollPane(table);
                        JFrame f = new JFrame("Select special features: ");
                        JPanel panel = new JPanel();
                        panel.add(pane);
                        f.add(panel);
                        f.setSize(600, 350);
                        f.setVisible(true);
                        initComponents();
                        Toolkit toolkit=getToolkit();
                        Dimension size= toolkit.getScreenSize();
                        f.setLocation(size.width/2-getWidth()/4,size.height/2-getHeight()/3); 
       
                        table.addMouseListener(new MouseAdapter(){
                        public void mouseClicked(MouseEvent e) {                // kanei override tis public methodou
                        try{
                        if(e.getClickCount() ==2)
                        {
                        JTable jtable = (JTable)e.getSource();
                        int row= jtable.getSelectedRow();
                        
                        String sql= "update series set special_features=? where series_id=?";
                        PreparedStatement pst=con.prepareStatement(sql);
                        pst.setString(1,row+"");
                        pst.setString(2,l_id);
                        pst.execute();
                        JOptionPane.showMessageDialog(null,"Succesful update!");
                        f.setVisible(false);
                        }}
                          catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }         
                            }});  
                        
                        }      
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});   
                   break; 
                   case 5:                                                      // gia pinaka language
                     String sql6 = "select * from language";     
                      PreparedStatement pst6 = con.prepareStatement(sql6);
                      ResultSet rs6 =pst6.executeQuery();
                      
                      int count6=0;
                      while(rs6.next())
                      {count6++;}
                      
                      String columns6[]={"Language_ID","Name"};
                      String data6[][]=new String[count6][2];
                      
                      PreparedStatement pst61 = con.prepareStatement(sql6);
                    ResultSet rs61 =pst61.executeQuery();
                    int i6=0;
                    while (rs61.next()) {
                      int l_id = rs61.getInt("language_id");
                      String lname= rs61.getString("name");
                     
                      data6[i6][0] = l_id + "";
                      data6[i6][1] = lname;
                      i6++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model6 = new DefaultTableModel(data6, columns6); 
                      JTable table6 = new JTable(model6); 
                      table6.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table6.getTableHeader().setReorderingAllowed(false);                       
                      table6.setShowGrid(true);
                      table6.setShowVerticalLines(true);
                      JScrollPane pane6 = new JScrollPane(table6);
                      JFrame f6 = new JFrame("Choose language to update: ");
                      JPanel panel6 = new JPanel();
                      panel6.add(pane6);
                      f6.add(panel6);
                      f6.setSize(600, 250);
                      f6.setVisible(true);
                      initComponents();
                      Toolkit toolkit6=getToolkit();
                      Dimension size6= toolkit6.getScreenSize();
                      f6.setLocation(size6.width/2-getWidth()/4,size6.height/2-getHeight()/2);
       
                    table6.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e6) {                 // kanei override tis public methodou
                          if(e6.getClickCount() ==2)
                            {try{  
                             JTable jtable6 = (JTable)e6.getSource();
                            int row6= jtable6.getSelectedRow();
                            String l_id= (String)jtable6.getValueAt(row6,0);
                            
                            if(jtable6.getSelectedColumn()==1){                 // an dialeksei update sto onoma
                            String lname= JOptionPane.showInputDialog(null, "Enter new language name: ");
                            if(lname ==null){                                   // an patithei "x" i "cancel"
                              JOptionPane.showMessageDialog(null,"Cancelling update!");}
                           else if(lname.length()==0)                           // an dothei keno orisma 
                             {JOptionPane.showMessageDialog(null,"Name can't be blank! Cancelling update!");}
                            else{
                            String sql6 = "update language set name=? where language_id=?";    
                            PreparedStatement pst6=con.prepareStatement(sql6);
                            pst6.setString(1,lname);
                            pst6.setString(2,l_id);
                            pst6.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");}}
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }}); 
                   break; 
                   case 6:                                                      // gia ton pinaka category
                       String sql7 = "select * from category";     
                      PreparedStatement pst7 = con.prepareStatement(sql7);
                      ResultSet rs7 =pst7.executeQuery();
                      
                      int count7=0;
                      while(rs7.next())
                      {count7++;}
                      
                      String columns7[]={"Category_Id","Name"};
                      String data7[][]=new String[count7][2];
                      
                      PreparedStatement pst71 = con.prepareStatement(sql7);
                    ResultSet rs71 =pst71.executeQuery();
                    int i7=0;
                    while (rs71.next()) {
                      int c_id = rs71.getInt("category_id");
                      String cname= rs71.getString("name");
                     
                      data7[i7][0] = c_id + "";
                      data7[i7][1] = cname;
                      i7++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model7 = new DefaultTableModel(data7, columns7); 
                      JTable table7 = new JTable(model7); 
                      table7.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table7.getTableHeader().setReorderingAllowed(false);                       
                      table7.setShowGrid(true);
                      table7.setShowVerticalLines(true);
                      JScrollPane pane7 = new JScrollPane(table7);
                      JFrame f7 = new JFrame("Choose category to update: ");
                      JPanel panel7 = new JPanel();
                      panel7.add(pane7);
                      f7.add(panel7);
                      f7.setSize(600, 250);
                      f7.setVisible(true);
                      initComponents();
                      Toolkit toolkit7=getToolkit();
                      Dimension size7= toolkit7.getScreenSize();
                      f7.setLocation(size7.width/2-getWidth()/4,size7.height/2-getHeight()/2);
       
                    table7.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e7) {                 // kanei override tis public methodou
                          if(e7.getClickCount() ==2)
                            {try{  
                             JTable jtable7 = (JTable)e7.getSource();
                            int row7= jtable7.getSelectedRow();
                            String c_id= (String)jtable7.getValueAt(row7,0);
                            
                            if(jtable7.getSelectedColumn()==1){                 // an dialeksei update sto onoma
                            String cname= JOptionPane.showInputDialog(null, "Enter new category name: ");
                            if(cname ==null){                                   // an patithei "x" i "cancel"
                              JOptionPane.showMessageDialog(null,"Cancelling update!");}
                           else if(cname.length()==0)                           // an dothei keno orisma 
                             {JOptionPane.showMessageDialog(null,"Name can't be blank! Cancelling update!");}
                            else{
                            String sql7 = "update category set name=? where category_id=?";    
                            PreparedStatement pst7=con.prepareStatement(sql7);
                            pst7.setString(1,cname); 
                            pst7.setString(2,c_id);
                            pst7.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");}}
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }}); 
                   break;  
                   case 7:                                                      // gia ton pinaka film_category
                      String sql8 = "select * from film_category order by film_id";     
                      PreparedStatement pst8 = con.prepareStatement(sql8);
                      ResultSet rs8 =pst8.executeQuery();
                      
                      int count8=0;
                      while(rs8.next())
                      {count8++;}
                      
                      String columns8[]={"Film_Id","Category_Id"};
                      String data8[][]=new String[count8][2];
                      
                      PreparedStatement pst81 = con.prepareStatement(sql8);
                    ResultSet rs81 =pst81.executeQuery();
                    int i8=0;
                    while (rs81.next()) {
                      int fcf_id = rs81.getInt("film_id");
                      String fc_id= rs81.getString("category_id");
                      
                      data8[i8][0] = fcf_id + "";
                      data8[i8][1] = fc_id;
                      i8++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model8 = new DefaultTableModel(data8, columns8); 
                      JTable table8 = new JTable(model8); 
                      table8.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table8.getTableHeader().setReorderingAllowed(false);                       
                      table8.setShowGrid(true);
                      table8.setShowVerticalLines(true);
                      JScrollPane pane8 = new JScrollPane(table8);
                      JFrame f8 = new JFrame("Choose film category to update: ");
                      JPanel panel8 = new JPanel();
                      panel8.add(pane8);
                      f8.add(panel8);
                      f8.setSize(500, 250);
                      f8.setVisible(true);
                      initComponents();
                      Toolkit toolkit8=getToolkit();
                      Dimension size8= toolkit8.getScreenSize();
                      f8.setLocation(size8.width/2-getWidth()/4,size8.height/2-getHeight()/2);
       
                    table8.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e2) {                // kanei override tis public methodou
                          if(e2.getClickCount() ==2)
                            {try{  
                             JTable jtable2 = (JTable)e2.getSource();
                            int row2= jtable2.getSelectedRow();
                            String fa_id= (String)jtable2.getValueAt(row2,0);
                            String fa_fid= (String)jtable2.getValueAt(row2,1);
                            
                            if(jtable2.getSelectedColumn()==0){                 // an dialeksei update sto film_id
                               
                             String sql22 = "select film_id from film order by film_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Film_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("film_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new film id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 250);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update film_category set film_id=? where film_category.film_id=? and film_category.category_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.setString(3,fa_fid);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});  
                            }
                            
                            else if(jtable2.getSelectedColumn()==1){            // an dialeksei update sto category_id
                            String sql22 = "select category_id from category order by category_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Category_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("category_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new category id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 350);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update film_category set category_id=? where film_category.film_id=? and film_category.category_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.setString(3,fa_fid);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});
                            }
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }}); 
                   break;  
                   case 8:                                                      // gia ton pinaka series_category
                       String sql9 = "select * from series_category order by series_id";     
                      PreparedStatement pst9 = con.prepareStatement(sql9);
                      ResultSet rs9 =pst9.executeQuery();
                      
                      int count9=0;
                      while(rs9.next())
                      {count9++;}
                      
                      String columns9[]={"Series_Id","Category_Id"};
                      String data9[][]=new String[count9][2];
                      
                      PreparedStatement pst91 = con.prepareStatement(sql9);
                    ResultSet rs91 =pst91.executeQuery();
                    int i9=0;
                    while (rs91.next()) {
                      int scs_id = rs91.getInt("series_id");
                      String sc_id= rs91.getString("category_id");
                      
                      data9[i9][0] = scs_id + "";
                      data9[i9][1] = sc_id;
                      i9++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model9 = new DefaultTableModel(data9, columns9); 
                      JTable table9 = new JTable(model9); 
                      table9.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table9.getTableHeader().setReorderingAllowed(false);                       
                      table9.setShowGrid(true);
                      table9.setShowVerticalLines(true);
                      JScrollPane pane9 = new JScrollPane(table9);
                      JFrame f9 = new JFrame("Choose series category to update: ");
                      JPanel panel9 = new JPanel();
                      panel9.add(pane9);
                      f9.add(panel9);
                      f9.setSize(500, 250);
                      f9.setVisible(true);
                      initComponents();
                      Toolkit toolkit9=getToolkit();
                      Dimension size9= toolkit9.getScreenSize();
                      f9.setLocation(size9.width/2-getWidth()/4,size9.height/2-getHeight()/2);
       
                    table9.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e2) {                // kanei override tis public methodou
                          if(e2.getClickCount() ==2)
                            {try{  
                             JTable jtable2 = (JTable)e2.getSource();
                            int row2= jtable2.getSelectedRow();
                            String fa_id= (String)jtable2.getValueAt(row2,0);
                            String fa_fid= (String)jtable2.getValueAt(row2,1);
                            
                            if(jtable2.getSelectedColumn()==0){                 // an dialeksei update sto series_id
                               
                             String sql22 = "select series_id from series order by series_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Series_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("series_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new series id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 250);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update series_category set series_id=? where series_category.series_id=? and series_category.category_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.setString(3,fa_fid);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});  
                            }
                            
                            else if(jtable2.getSelectedColumn()==1){            // an dialeksei update sto category_id
                            String sql22 = "select category_id from category order by category_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Category_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("category_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new category id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 350);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update series_category set category_id=? where series_category.series_id=? and series_category.category_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.setString(3,fa_fid);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});
                            }
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }}); 
                   break;  
                   case 9:                                                      // gia ton pinaka address
                     String sql10 = "select * from address order by address_id";     
                      PreparedStatement pst10 = con.prepareStatement(sql10);
                      ResultSet rs10 =pst10.executeQuery();
                      
                      int count10=0;
                      while(rs10.next())
                      {count10++;}
    
                      String columns10[]={"Address_Id","Address","District","City_Id","Postal_Code","Phone"};
                      String data10[][]=new String[count10][6];
                      
                      PreparedStatement pst101 = con.prepareStatement(sql10);
                    ResultSet rs101 =pst101.executeQuery();
                    int i101=0;
                    while (rs101.next()) {
                      int scs_id = rs101.getInt("address_id");
                      String city = rs101.getString("address");
                      String sc_id= rs101.getString("district");
                      String ct_id= rs101.getString("city_id");
                      String ps_code= rs101.getString("postal_code");
                      String tphone= rs101.getString("phone");
                      
                      data10[i101][0] = scs_id + "";
                      data10[i101][1] = city;
                      data10[i101][2] = sc_id;
                      data10[i101][3]= ct_id;
                      data10[i101][4]= ps_code;
                      data10[i101][5]= tphone;
                      i101++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model10 = new DefaultTableModel(data10, columns10); 
                      JTable table10 = new JTable(model10); 
                      table10.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table10.getTableHeader().setReorderingAllowed(false);                       
                      table10.setShowGrid(true);
                      table10.setShowVerticalLines(true);
                      JScrollPane pane10 = new JScrollPane(table10);
                      JFrame f10 = new JFrame("Choose address to update: ");
                      JPanel panel10 = new JPanel();
                      panel10.add(pane10);
                      f10.add(panel10);
                      f10.setSize(500, 250);
                      f10.setVisible(true);
                      initComponents();
                      Toolkit toolkit10=getToolkit();
                      Dimension size10= toolkit10.getScreenSize();
                      f10.setLocation(size10.width/2-getWidth()/4,size10.height/2-getHeight()/2);
       
                    table10.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e2) {                // kanei override tis public methodou
                          if(e2.getClickCount() ==2)
                            {try{  
                             JTable jtable2 = (JTable)e2.getSource();
                            int row2= jtable2.getSelectedRow();
                            String fa_id= (String)jtable2.getValueAt(row2,0);
                            
                            if(jtable2.getSelectedColumn()==1){                 // an dialeksei update sto address
                                String gaddress= JOptionPane.showInputDialog(null, "Enter new address: ");
                                
                                 if(gaddress==null)                             // an patithei to "cancel" i to "x"
                                     {JOptionPane.showMessageDialog(null,"Cancelling update!");}
                                 else if(gaddress.length()==0)                     // an patithei to "ok" xvris na exei dothei timi
                                  {JOptionPane.showMessageDialog(null,"Address can't be blank! Unsuccesful update!");}                                                                             
                                 else{                  
                                     String sql10 = "update address set address=? where address_id=?";
                                     PreparedStatement pst10= con.prepareStatement(sql10); 
                                     pst10.setString(1,gaddress);
                                     pst10.setString(2,fa_id);
                                     pst10.execute(); 
                                 }
                            }
                            else if(jtable2.getSelectedColumn()==2){                // an dialeksei update sto address
                              String dis= JOptionPane.showInputDialog(null, "Enter new district: ");
                              if(dis==null)
                               {JOptionPane.showMessageDialog(null,"Cancelling update!");}
                              else if(dis.length()==0)                          // an patithei to "ok" xvris na exei dothei timi
                                  {JOptionPane.showMessageDialog(null,"District can't be blank! Unsuccesful update!");}
                              else{
                              String sql102 = "update address set district=? where address_id=?";   
                              PreparedStatement pst102=con.prepareStatement(sql102);
                              pst102.setString(1,dis);
                              pst102.setString(2,fa_id);
                              JOptionPane.showMessageDialog(null,"Succesful update!");}
                            }
                            else if(jtable2.getSelectedColumn()==3){            // an dialeksei update sto city_id
                            String sql22 = "select city_id from city order by city_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery(); 
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"City_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("city_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new city id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 350);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update address set city_id=? where address_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});
                            }
                        else if(jtable2.getSelectedColumn()==4){                // an kanei update sto postal_code
                             String post_code= JOptionPane.showInputDialog(null, "Enter new postal code: ");
                             
                             if(post_code==null){
                                JOptionPane.showMessageDialog(null,"Cancelling update!");}
                             else if(post_code.length()==0){
                               JOptionPane.showMessageDialog(null,"Postal code can't be blank! Unsuccesful update!");
                             }
                             else{
                              boolean num= post_code.matches("[0-9]+");   
                              if(num==false)
                                {JOptionPane.showMessageDialog(null,"Postal code can't contain letters! Unsuccesful update!");}
                              else{
                              String sql103 = "update address set postal_code=? where address_id=?";   
                              PreparedStatement pst103=con.prepareStatement(sql103);
                              pst103.setString(1,post_code);
                              pst103.setString(2,fa_id);
                              JOptionPane.showMessageDialog(null,"Succesful update!");
                             }}}   
                            else if(jtable2.getSelectedColumn()==5){               // an kanei update sto phone
                               String tphone= JOptionPane.showInputDialog(null, "Enter new phone number: ");
                             
                             if(tphone==null){
                                JOptionPane.showMessageDialog(null,"Cancelling update!");}
                             else if(tphone.length()==0){
                               JOptionPane.showMessageDialog(null,"Phone number can't be blank! Unsuccesful update!");
                             }
                             else{
                              boolean pnum= tphone.matches("[0-9]+");   
                              if(pnum==false)
                                {JOptionPane.showMessageDialog(null,"Phone number can't contain letters! Unsuccesful update!");}
                              else{
                              String sql104 = "update address set phone=? where address_id=?";   
                              PreparedStatement pst104=con.prepareStatement(sql104);
                              pst104.setString(1,tphone);
                              pst104.setString(2,fa_id);
                              JOptionPane.showMessageDialog(null,"Succesful update!");
                             }}
                               }
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});                           
                   break;
                   case 10:                                                     // gia ton pinaka city
                     String sql111 = "select * from city order by city_id";     
                      PreparedStatement pst111 = con.prepareStatement(sql111);
                      ResultSet rs111 =pst111.executeQuery();
                      
                      int count111=0;
                      while(rs111.next())
                      {count111++;}
    
                      String columns111[]={"City_ID","City","Country_Id"};
                      String data111[][]=new String[count111][3];
                      
                      PreparedStatement pst111_2 = con.prepareStatement(sql111);
                    ResultSet rs111_2 =pst111_2.executeQuery();
                    int i111=0;
                    while (rs111_2.next()) {
                      int scs_id = rs111_2.getInt("city_id");
                      String city = rs111_2.getString("city");
                      String sc_id= rs111_2.getString("country_id");
                      
                      data111[i111][0] = scs_id + "";
                      data111[i111][1] = city;
                      data111[i111][2] = sc_id;
                      i111++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model111 = new DefaultTableModel(data111, columns111); 
                      JTable table111 = new JTable(model111); 
                      table111.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table111.getTableHeader().setReorderingAllowed(false);                       
                      table111.setShowGrid(true);
                      table111.setShowVerticalLines(true);
                      JScrollPane pane111 = new JScrollPane(table111);
                      JFrame f111 = new JFrame("Choose city to update: ");
                      JPanel panel111 = new JPanel();
                      panel111.add(pane111);
                      f111.add(panel111);
                      f111.setSize(500, 250);
                      f111.setVisible(true);
                      initComponents();
                      Toolkit toolkit111=getToolkit();
                      Dimension size111= toolkit111.getScreenSize();
                      f111.setLocation(size111.width/2-getWidth()/4,size111.height/2-getHeight()/2);
       
                    table111.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e2) {                // kanei override tis public methodou
                          if(e2.getClickCount() ==2)
                            {try{  
                             JTable jtable2 = (JTable)e2.getSource();
                            int row2= jtable2.getSelectedRow();
                            String fa_id= (String)jtable2.getValueAt(row2,0);
                            
                            if(jtable2.getSelectedColumn()==1){                 // an dialeksei update sto city
                                String gcity= JOptionPane.showInputDialog(null, "Enter new city: ");
                                
                                 if(gcity==null)                                // an patithei to "cancel" i to "x"
                                     {JOptionPane.showMessageDialog(null,"Cancelling update!");}
                                 else if(gcity.length()==0)                     // an patithei to "ok" xvris na exei dothei timi
                                  {JOptionPane.showMessageDialog(null,"City can't be blank! Unsuccesful update!");}                                                                             
                                 else{                  
                                   boolean alph= gcity.matches("[a-zA-Z]+");
                                   if(alph==false)                              // an i dosmeni poli periexei arithmo
                                   {JOptionPane.showMessageDialog(null,"City can only contain letters! Cancelling update!");}  
                                 else{
                                     String sql111_3 = "update city set city=? where city_id=?";
                                     PreparedStatement pst111_3= con.prepareStatement(sql111_3); 
                                     pst111_3.setString(1,gcity);
                                     pst111_3.setString(2,fa_id);
                                     pst111_3.execute(); 
                                 }}
                            }
                            else if(jtable2.getSelectedColumn()==2){            // an dialeksei update sto country_id
                            String sql22 = "select country_id from country order by country_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Country_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("country_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new country id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 350);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update city set country_id=? where city_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});
                            }
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});  
                   break; 
                   case 11:                                                     // gia ton pinaka country
                      String sql12 = "select * from country";     
                      PreparedStatement pst12 = con.prepareStatement(sql12);
                      ResultSet rs12 =pst12.executeQuery();
                      
                      int count12=0;
                      while(rs12.next())
                      {count12++;}
                      
                      String columns12[]={"Country_Id","Country"};
                      String data12[][]=new String[count12][2];
                      
                      PreparedStatement pst121 = con.prepareStatement(sql12);
                    ResultSet rs121 =pst121.executeQuery();
                    int i12=0;
                    while (rs121.next()) {
                      int co_id = rs121.getInt("country_id");
                      String coname= rs121.getString("country");
                     
                      data12[i12][0] = co_id + "";
                      data12[i12][1] = coname;
                      i12++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model12 = new DefaultTableModel(data12, columns12); 
                      JTable table12 = new JTable(model12); 
                      table12.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table12.getTableHeader().setReorderingAllowed(false);                       
                      table12.setShowGrid(true);
                      table12.setShowVerticalLines(true);
                      JScrollPane pane12 = new JScrollPane(table12);
                      JFrame f12 = new JFrame("Choose country to update: ");
                      JPanel panel12 = new JPanel();
                      panel12.add(pane12);
                      f12.add(panel12);
                      f12.setSize(600, 250);
                      f12.setVisible(true);
                      initComponents();
                      Toolkit toolkit12=getToolkit();
                      Dimension size12= toolkit12.getScreenSize();
                      f12.setLocation(size12.width/2-getWidth()/4,size12.height/2-getHeight()/2);
       
                    table12.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e12) {               // kanei override tis public methodou
                          if(e12.getClickCount() ==2)
                            {try{  
                             JTable jtable12 = (JTable)e12.getSource();
                            int row12= jtable12.getSelectedRow();
                            String co_id= (String)jtable12.getValueAt(row12,0);
                            
                            if(jtable12.getSelectedColumn()==1){                 // an dialeksei update stin xwra
                            String coname= JOptionPane.showInputDialog(null, "Enter new country: ");
                            if(coname ==null){                                   // an patithei "x" i "cancel"
                              JOptionPane.showMessageDialog(null,"Cancelling update!");}
                           else if(coname.length()==0)                           // an dothei keno orisma 
                             {JOptionPane.showMessageDialog(null,"Name can't be blank! Cancelling update!");}
                            else{
                            boolean alph= coname.matches("[a-zA-Z]+");   
                               
                            if(alph==true){
                            String sql12 = "update country set country=? where country_id=?";    
                            PreparedStatement pst12=con.prepareStatement(sql12);
                            pst12.setString(1,coname); 
                            pst12.setString(2,co_id);
                            pst12.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");}
                            else
                            { JOptionPane.showMessageDialog(null,"Country can only contain letters! Cancelling update!");}
                            }}
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }}); 
                   break;   
                   case 12:                                                     // gia ton pinaka film_inventory
                    String sql13 = "select * from film_inventory order by inventory_id";     
                      PreparedStatement pst13 = con.prepareStatement(sql13);
                      ResultSet rs13 =pst13.executeQuery();
                      
                      int count13=0;
                      while(rs13.next())
                      {count13++;}
                      
                      String columns13[]={"Inventory_Id","Film_Id"};
                      String data13[][]=new String[count13][2];
                      
                      PreparedStatement pst131 = con.prepareStatement(sql13);
                    ResultSet rs131 =pst131.executeQuery();
                    int i13=0;
                    while (rs131.next()) {
                      int scs_id = rs131.getInt("inventory_id");
                      String sc_id= rs131.getString("film_id");
                      
                      data13[i13][0] = scs_id + "";
                      data13[i13][1] = sc_id;
                      i13++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model13 = new DefaultTableModel(data13, columns13); 
                      JTable table13 = new JTable(model13); 
                      table13.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table13.getTableHeader().setReorderingAllowed(false);                       
                      table13.setShowGrid(true);
                      table13.setShowVerticalLines(true);
                      JScrollPane pane13 = new JScrollPane(table13);
                      JFrame f13 = new JFrame("Choose film inventory to update: ");
                      JPanel panel13 = new JPanel();
                      panel13.add(pane13);
                      f13.add(panel13);
                      f13.setSize(500, 250);
                      f13.setVisible(true);
                      initComponents();
                      Toolkit toolkit13=getToolkit();
                      Dimension size13= toolkit13.getScreenSize();
                      f13.setLocation(size13.width/2-getWidth()/4,size13.height/2-getHeight()/2);
       
                    table13.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e2) {                // kanei override tis public methodou
                          if(e2.getClickCount() ==2)
                            {try{  
                             JTable jtable2 = (JTable)e2.getSource();
                            int row2= jtable2.getSelectedRow();
                            String fa_id= (String)jtable2.getValueAt(row2,0);
                            
                            if(jtable2.getSelectedColumn()==1){                 // an dialeksei update sto film_id
                            String sql22 = "select film_id from film order by film_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Film_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("film_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new film id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 350);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update film_inventory set film_id=? where inventory_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});
                            }
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});
                   break;
                   case 13:                                                     // gia ton pinaka series_inventory
                     String sql14 = "select * from series_inventory order by inventory_id";     
                      PreparedStatement pst14 = con.prepareStatement(sql14);
                      ResultSet rs14 =pst14.executeQuery();
                      
                      int count14=0;
                      while(rs14.next())
                      {count14++;}
                      
                      String columns14[]={"Inventory_Id","Series_Id"};
                      String data14[][]=new String[count14][2];
                      
                      PreparedStatement pst141 = con.prepareStatement(sql14);
                    ResultSet rs141 =pst141.executeQuery();
                    int i14=0;
                    while (rs141.next()) {
                      int scs_id = rs141.getInt("inventory_id");
                      String sc_id= rs141.getString("series_id");
                      
                      data14[i14][0] = scs_id + "";
                      data14[i14][1] = sc_id;
                      i14++;}
                      
                      f.setVisible(false); 
                      DefaultTableModel model14 = new DefaultTableModel(data14, columns14); 
                      JTable table14 = new JTable(model14); 
                      table14.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table14.getTableHeader().setReorderingAllowed(false);                       
                      table14.setShowGrid(true);
                      table14.setShowVerticalLines(true);
                      JScrollPane pane14 = new JScrollPane(table14);
                      JFrame f14 = new JFrame("Choose series inventory to update: ");
                      JPanel panel14 = new JPanel();
                      panel14.add(pane14);
                      f14.add(panel14);
                      f14.setSize(500, 250);
                      f14.setVisible(true);
                      initComponents();
                      Toolkit toolkit14=getToolkit();
                      Dimension size14= toolkit14.getScreenSize();
                      f14.setLocation(size14.width/2-getWidth()/4,size14.height/2-getHeight()/2);
       
                    table14.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e2) {                // kanei override tis public methodou
                          if(e2.getClickCount() ==2)
                            {try{  
                             JTable jtable2 = (JTable)e2.getSource();
                            int row2= jtable2.getSelectedRow();
                            String fa_id= (String)jtable2.getValueAt(row2,0);
                            
                            if(jtable2.getSelectedColumn()==1){                 // an dialeksei update sto film_id
                            String sql22 = "select series_id from series order by series_id";
                             PreparedStatement pst22 = con.prepareStatement(sql22);  
                             ResultSet rs22 = pst22.executeQuery();
                             
                             int count22=0;
                              while(rs22.next())
                              {count22++;}
                      
                              String columns22[]={"Series_Id"};
                              String data22[][]=new String[count22][1];
                      
                              PreparedStatement pst23 = con.prepareStatement(sql22);
                              ResultSet rs23 =pst23.executeQuery();
                              int i23=0;
                              while (rs23.next()) {
                              int aa_id = rs23.getInt("series_id");
                              data22[i23][0] = aa_id + "";
                              i23++;}
                              
                              f.setVisible(false); 
                      DefaultTableModel model22 = new DefaultTableModel(data22, columns22); 
                      JTable table22 = new JTable(model22); 
                      table22.setDefaultEditor(Object.class, null);              // kanei ton pinaka mi-editible
                      table22.getTableHeader().setReorderingAllowed(false);                       
                      table22.setShowGrid(true);
                      table22.setShowVerticalLines(true);
                      JScrollPane pane22 = new JScrollPane(table22);
                      JFrame f22 = new JFrame("Choose new series id: ");
                      JPanel panel22 = new JPanel();
                      panel22.add(pane22);
                      f22.add(panel22);
                      f22.setSize(600, 350);
                      f22.setVisible(true);
                      initComponents();
                      Toolkit toolkit22=getToolkit();
                      Dimension size22= toolkit22.getScreenSize();
                      f22.setLocation(size22.width/2-getWidth()/4,size22.height/2-getHeight()/2);
                      
                       table22.addMouseListener(new MouseAdapter(){                 
                       public void mouseClicked(MouseEvent e21) {                // kanei override tis public methodou
                          if(e21.getClickCount() ==2)
                            {try{  
                             JTable jtable21 = (JTable)e21.getSource();
                            int row21= jtable21.getSelectedRow();
                            String fa_id2= (String)jtable21.getValueAt(row21,0);
                            
                            String sql24= "update series_inventory set series_id=? where inventory_id=?";
                            PreparedStatement pst24=con.prepareStatement(sql24);
                            pst24.setString(1,fa_id2);
                            pst24.setString(2,fa_id);
                            pst24.execute();
                            JOptionPane.showMessageDialog(null,"Succesful update!");
                            f22.setVisible(false);
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }}});
                            }
                            }
                            catch(Exception ex){
                          JOptionPane.showMessageDialog(null,ex);
                             }           
                            }
                       }});  
                   break;    
                  default:   
               }}
                catch(Exception ex){
                JOptionPane.showMessageDialog(null,ex);
                }             
             }    
         }});
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }             
    }                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton logout;
    private javax.swing.JButton logout1;
    private javax.swing.JButton mostrented;
    private javax.swing.JButton rentalhistory;
    private javax.swing.JButton showcustomers;
    private javax.swing.JButton updatetables;
    // End of variables declaration                   
}
