/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tvondemand;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Μαλβίνα
 */
public class AdminMenu extends javax.swing.JFrame {

    public String username;
    public String ctype;
   
    public AdminMenu() {
        initComponents();
    }

    public AdminMenu(String admin) {
        initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        username=admin;
        
        try{                                                                    // enimerwnei ton pinaka user me to email tou trexontos xristi
          Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");   
         String sqli = "update user set username=? where user_id=1";    
         PreparedStatement psti=con.prepareStatement(sqli);
         psti.setString(1,username);
         psti.execute();}
          catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        logout1 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        createaccount = new javax.swing.JButton();
        deleteaccount = new javax.swing.JButton();
        changeaccounttype = new javax.swing.JButton();
        showmonthlyincome = new javax.swing.JButton();
        changerentalprice = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(0, 51, 51));
        jTextField2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 34)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setText("   Welcome! What do you want to do next?");
        jTextField2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        logout1.setBackground(new java.awt.Color(0, 51, 51));
        logout1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        logout1.setForeground(new java.awt.Color(255, 255, 255));
        logout1.setText("Log out");
        logout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout1ActionPerformed(evt);
            }
        });

        jTextField3.setBackground(new java.awt.Color(0, 153, 153));
        jTextField3.setFont(new java.awt.Font("Bauhaus 93", 2, 14)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(255, 255, 255));
        jTextField3.setText("TVonDemand");
        jTextField3.setBorder(null);

        createaccount.setBackground(new java.awt.Color(0, 51, 51));
        createaccount.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        createaccount.setForeground(new java.awt.Color(255, 255, 255));
        createaccount.setText("Create New Account");
        createaccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createaccountActionPerformed(evt);
            }
        });

        deleteaccount.setBackground(new java.awt.Color(0, 51, 51));
        deleteaccount.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        deleteaccount.setForeground(new java.awt.Color(255, 255, 255));
        deleteaccount.setText("Delete Account");
        deleteaccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteaccountActionPerformed(evt);
            }
        });

        changeaccounttype.setBackground(new java.awt.Color(0, 51, 51));
        changeaccounttype.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        changeaccounttype.setForeground(new java.awt.Color(255, 255, 255));
        changeaccounttype.setText("Change Account Type");
        changeaccounttype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeaccounttypeActionPerformed(evt);
            }
        });

        showmonthlyincome.setBackground(new java.awt.Color(0, 51, 51));
        showmonthlyincome.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        showmonthlyincome.setForeground(new java.awt.Color(255, 255, 255));
        showmonthlyincome.setText("Show Monthly Income");
        showmonthlyincome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showmonthlyincomeActionPerformed(evt);
            }
        });

        changerentalprice.setBackground(new java.awt.Color(0, 51, 51));
        changerentalprice.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        changerentalprice.setForeground(new java.awt.Color(255, 255, 255));
        changerentalprice.setText("Change Rental Price");
        changerentalprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changerentalpriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                        .addContainerGap(34, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(createaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(deleteaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(changeaccounttype, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(logout1)
                                .addGap(23, 23, 23))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(272, 272, 272))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showmonthlyincome, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(changerentalprice, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(logout1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                        .addGap(140, 140, 140))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(createaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changeaccounttype, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showmonthlyincome, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changerentalprice, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        
     public String CurrentDatetime(){
     SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
     Date now= new Date();
     String date = sdf.format(now);
     return date;
    }
    
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void logout1ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        Login login= new Login();
        login.setVisible(true);
        setVisible(false);
    }                                       

    private void createaccountActionPerformed(java.awt.event.ActionEvent evt) {                                              
        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");   
          
        String columns[] = {"Account Type"};
        String data[][] = new String[2][1];
        data[0][0] = "Customer";
        data[1][0] = "Employee";
        
        DefaultTableModel model = new DefaultTableModel(data, columns); 
       JTable table = new JTable(model); 
       table.setDefaultEditor(Object.class, null);                              // kanei ton pinaka mi-editible
       table.getTableHeader().setReorderingAllowed(false);                       
       table.getColumnModel().getColumn(0).setPreferredWidth(200);
       table.setPreferredScrollableViewportSize(table.getPreferredSize());
       table.setShowGrid(true);
       table.setShowVerticalLines(true);
       JScrollPane pane = new JScrollPane(table);
       JFrame f = new JFrame("Select type of account to create: ");
       JPanel panel = new JPanel();
       panel.add(pane);
       f.add(panel);
       f.setSize(400, 150);
       f.setVisible(true);
       initComponents();
       Toolkit toolkit=getToolkit();
       Dimension size= toolkit.getScreenSize();
       f.setLocation(size.width/2-getWidth()/4,size.height/2-getHeight()/3); 
       
        table.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
             if(e.getClickCount() ==2)
             {  
               JTable jtable = (JTable)e.getSource();  
    if(jtable.getSelectedRow()==0){                                             /// an dialeksei na ftiaksei pelati                                
                
            String columns1[] = {"Available Subscription Types "};
        String data1[][] = new String[3][1];
        data1[0][0] = "M";
        data1[1][0] = "MS";
        data1[2][0] = "S";
            
       f.setVisible(false); 
       DefaultTableModel model1 = new DefaultTableModel(data1, columns1); 
       JTable table1 = new JTable(model1); 
       table1.setDefaultEditor(Object.class, null);                               // kanei ton pinaka mi-editible
       table1.getTableHeader().setReorderingAllowed(false);      
       table1.getColumnModel().getColumn(0).setPreferredWidth(200);
       table1.setPreferredScrollableViewportSize(table.getPreferredSize());
       table1.setShowGrid(true);
       table1.setShowVerticalLines(true);
       JScrollPane pane1 = new JScrollPane(table1);
       JFrame f1 = new JFrame("Select type of account: ");
       JPanel panel1 = new JPanel();
       panel1.add(pane1);
       f1.add(panel1);
       f1.setSize(400, 150);
       f1.setVisible(true);
       initComponents();
       Toolkit toolkit1=getToolkit();
       Dimension size1= toolkit1.getScreenSize();
       f1.setLocation(size1.width/2-getWidth()/4,size1.height/2-getHeight()/3);
       
        table1.addMouseListener(new MouseAdapter(){                             // mouseListener gia to subscription type
         public void mouseClicked(MouseEvent e1) {                              // kanei override tis public methodou
             int flag=1;
             if(e1.getClickCount()==2)
             {
               JTable jtable2 = (JTable)e1.getSource();  
               if(jtable2.getSelectedRow()==0)                                  // an dialeksei tipo M
                 {ctype="M";}  
               else if(jtable2.getSelectedRow()==1)                             // an dialeksei tipo MS
                 {ctype="MS";}
               else if(jtable2.getSelectedRow()==2)                             // an dialeksei tipo MS
                 {ctype="S";}
               else
                {flag=0;}                                                       //an patithei "x"
               
               if(flag==1){                                                     // an den patithei "x", dld an sinexisei me tin eggrafi
                f1.setVisible(false);
                String cname= JOptionPane.showInputDialog(null, "Enter the customer's name: ");
                
                if(cname==null || cname.length()==0)                            // an patithei to "cancel" i to "x" i dothei keno orisma
                 {JOptionPane.showMessageDialog(null,"Cancelling creation!");}                                                                                 
                else if(cname.length()>0){                                      // gia swsti eisodo onomatos
                  String clast_name= JOptionPane.showInputDialog(null, "Enter the customer's last name: ");
                  if(clast_name==null || clast_name.length()==0)                // an patithei to "cancel" i to "x" i dothei keno orisma
                  {JOptionPane.showMessageDialog(null,"Cancelling creation!");} 
                  else if(clast_name.length()>0){                               // gia swsti eisodo epwnimou
                   String cmail= JOptionPane.showInputDialog(null, "Enter the customer's email: ");
                   if(cmail==null || cmail.length()==0)                         // an patithei to "cancel" i to "x" i dothei keno orisma
                   {JOptionPane.showMessageDialog(null,"Cancelling creation!");}
                   else if(cmail.length()>0){
                     try{                                                       // query gia tin lista twn dieuthinsewn
                     
                    String sql3 = "select address_id from address";     
                    PreparedStatement pst3 = con.prepareStatement(sql3);
                    ResultSet rs3 =pst3.executeQuery();
                     
                    int count=0;
                    while(rs3.next())
                      {count++;}
                    String columns3[]={"Address_Id"};
                    String data3[][]= new String[count][1];
                     
                    pst3 = con.prepareStatement(sql3);
                    ResultSet rs4 =pst3.executeQuery();
                    int i=0;
                    while (rs4.next()) {
                      int add_id = rs4.getInt("address_id");
                      data3[i][0] = add_id + "";
                      i++;}
                    
                    DefaultTableModel model3 = new DefaultTableModel(data3, columns3);
                    
                    JTable table3 = new JTable(model3);                
                    table3.getTableHeader().setReorderingAllowed(false);          
                    table3.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
                    table3.setPreferredScrollableViewportSize(table3.getPreferredSize());
                    table3.setShowGrid(true);
                    table3.setShowVerticalLines(true);
                    JScrollPane pane3 = new JScrollPane(table3);
                    JFrame f3 = new JFrame("Select the customer's address id:");
                    JPanel panel3 = new JPanel();
                    panel3.add(pane3);
                    f3.add(panel3);
                    f3.setSize(400, 150);
                    f3.setVisible(true);
                    initComponents();
                    Toolkit toolkit3=getToolkit();
                    Dimension size3= toolkit3.getScreenSize();
                    f3.setLocation(size3.width/2-getWidth()/4,size3.height/2-getHeight()/2);
                         
                    table3.addMouseListener(new MouseAdapter(){
                public void mouseClicked(MouseEvent e3) {                       // kanei override tis public methodou
                if(e3.getClickCount() ==2)
                   {try{
                    JTable jtable3 = (JTable)e3.getSource();  
                    int row= jtable3.getSelectedRow();
                    String cadd_id= (String)jtable3.getValueAt(row,0);
                    f3.setVisible(false);
                    
                     String sqli= "insert into customer values (?,?,?,?,?,?,?,?)";
                     PreparedStatement psti=con.prepareStatement(sqli);
                     psti.setString(1,null);
                     psti.setString(2,cname);
                     psti.setString(3,clast_name);
                     psti.setString(4,cmail);
                     psti.setString(5, cadd_id);                                       
                     psti.setString(6,"1");
                     psti.setString(7,CurrentDatetime());
                     psti.setString(8,ctype);
                     
                     psti.execute();
                     
                     JOptionPane.showMessageDialog(null,"Succesful creation!");
                     con.close();
                     }
                     catch(Exception ex){
                     JOptionPane.showMessageDialog(null,ex);
                  } }    
                      }
                    });     
                   
                   }
                   catch(Exception ex){
                  JOptionPane.showMessageDialog(null,ex);
                  }      
                   }   
                  }      
                }}                                                                   
             }              
             }    
            });}                                                                 /// ws edw gia pelati
          
           
    else if(jtable.getSelectedRow()==1){                                        /// apo dw kai katw gia employee                                       
            f.setVisible(false);    
            String cname= JOptionPane.showInputDialog(null, "Enter the employee's name: ");
                
                if(cname==null || cname.length()==0)                            // an patithei to "cancel" i to "x" i dothei keno orisma
                 {JOptionPane.showMessageDialog(null,"Cancelling creation!");}                                                                                 
                else if(cname.length()>0){                                      // gia swsti eisodo onomatos
                  String clast_name= JOptionPane.showInputDialog(null, "Enter the employee's last name: ");
                  if(clast_name==null || clast_name.length()==0)                // an patithei to "cancel" i to "x" i dothei keno orisma
                  {JOptionPane.showMessageDialog(null,"Cancelling creation!");} 
                  else if(clast_name.length()>0){                               // gia swsti eisodo epwnimou
                   String cmail= JOptionPane.showInputDialog(null, "Enter the employee's email: ");
                   if(cmail==null || cmail.length()==0)                         // an patithei to "cancel" i to "x" i dothei keno orisma
                   {JOptionPane.showMessageDialog(null,"Cancelling creation!");}
                   else if(cmail.length()>0){
                     try{                                                       // query gia tin lista twn dieuthinsewn
                     
                    String sql3 = "select address_id from address";     
                    PreparedStatement pst3 = con.prepareStatement(sql3);
                    ResultSet rs3 =pst3.executeQuery();
                     
                    int count=0;
                    while(rs3.next())
                      {count++;}
                    String columns3[]={"Address_Id"};
                    String data3[][]= new String[count][1];
                     
                    pst3 = con.prepareStatement(sql3);
                    ResultSet rs4 =pst3.executeQuery();
                    int i=0;
                    while (rs4.next()) {
                      int add_id = rs4.getInt("address_id");
                      data3[i][0] = add_id + "";
                      i++;}
                    
                    DefaultTableModel model3 = new DefaultTableModel(data3, columns3);
                    
                    JTable table3 = new JTable(model3);                
                    table3.getTableHeader().setReorderingAllowed(false);          
                    table3.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
                    table3.setPreferredScrollableViewportSize(table3.getPreferredSize());
                    table3.setShowGrid(true);
                    table3.setShowVerticalLines(true);
                    JScrollPane pane3 = new JScrollPane(table3);
                    JFrame f3 = new JFrame("Select the employee's address id:");
                    JPanel panel3 = new JPanel();
                    panel3.add(pane3);
                    f3.add(panel3);
                    f3.setSize(400, 150);
                    f3.setVisible(true);
                    initComponents();
                    Toolkit toolkit3=getToolkit();
                    Dimension size3= toolkit3.getScreenSize();
                    f3.setLocation(size3.width/2-getWidth()/4,size3.height/2-getHeight()/2);
                         
                    table3.addMouseListener(new MouseAdapter(){
                public void mouseClicked(MouseEvent e3) {                       // kanei override tis public methodou
                if(e3.getClickCount() ==2)
                   {try{
                    JTable jtable3 = (JTable)e3.getSource();  
                    int row= jtable3.getSelectedRow();
                    String cadd_id= (String)jtable3.getValueAt(row,0);
                    f3.setVisible(false);
                    
                     String sqli2= "insert into employee values (?,?,?,?,?,?,?)";
                     PreparedStatement psti2=con.prepareStatement(sqli2);
                     psti2.setString(1,null);
                     psti2.setString(2,cname);
                     psti2.setString(3,clast_name);
                     psti2.setString(4,cmail);
                     psti2.setString(5, cadd_id);                                       
                     psti2.setString(6,"1");
                     psti2.setString(7,CurrentDatetime());
                     
                     psti2.execute();
                     
                     JOptionPane.showMessageDialog(null,"Succesful creation!");
                     con.close();
                     }
                     catch(Exception ex){
                     JOptionPane.showMessageDialog(null,ex);
                  } }    
                      }
                    });     
                   
                   }
                   catch(Exception ex){
                  JOptionPane.showMessageDialog(null,ex);
                  }      
                   }   
                  }      
                }}              
    }}});
               
    }                                             
   catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
                 } }   
        
        
    private void deleteaccountActionPerformed(java.awt.event.ActionEvent evt) {                                              
        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");   
            
        String columns[] = {"Tables Available for Deletion "};
        String data[][] = new String[2][1];
        data[0][0] = "Customer";
        data[1][0] = "Employee";
        
        DefaultTableModel model = new DefaultTableModel(data, columns); 
       JTable table = new JTable(model); 
       table.setDefaultEditor(Object.class, null);                               // kanei ton pinaka mi-editible
       table.getTableHeader().setReorderingAllowed(false);                       
       table.getColumnModel().getColumn(0).setPreferredWidth(200);
       table.setPreferredScrollableViewportSize(table.getPreferredSize());
       table.setShowGrid(true);
       table.setShowVerticalLines(true);
       JScrollPane pane = new JScrollPane(table);
       JFrame f = new JFrame("Select type of account to delete: ");
       JPanel panel = new JPanel();
       panel.add(pane);
       f.add(panel);
       f.setSize(400, 150);
       f.setVisible(true);
       initComponents();
       Toolkit toolkit=getToolkit();
       Dimension size= toolkit.getScreenSize();
       f.setLocation(size.width/2-getWidth()/4,size.height/2-getHeight()/3); 
       
        table.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
            try{
             if(e.getClickCount() ==2)
             {
               JTable jtable = (JTable)e.getSource();  
               if(jtable.getSelectedRow()==0){                                  // an epilegei na diagrapsei pelati
                   String sql= "Select * from customer";          
                   PreparedStatement pst=con.prepareStatement(sql);
                   ResultSet rs= pst.executeQuery();
                   
                int count=0;
                 while(rs.next())
                 {count++;}
                 
                 rs= pst.executeQuery();       
                 String columns1[] = {"Customer_ID", "First_Name", "Last_Name","Email","Address_ID","Active", "Create_Date","Subscription_Type"};
                 String data1[][] = new String[count][8];
                
                 int i2=0;
                 while(rs.next()){
                  int id = rs.getInt("customer_id");
                  String name = rs.getString("first_name");
                  String l_name = rs.getString("last_name");
                  String mail = rs.getString("email");
                  int add_id = rs.getInt("address_id");
                  int act = rs.getInt("active");
                  String cr_date = rs.getString("create_date");
                  String s_type = rs.getString("subscription_type");
                  data1[i2][0] = id + "";
                  data1[i2][1] = name;
                  data1[i2][2] = l_name;
                  data1[i2][3] = mail;
                  data1[i2][4] = add_id + "";
                  data1[i2][5] = act + "";
                  data1[i2][6] = cr_date;
                  data1[i2][7] = s_type;
                  i2++;       
                 }
                 
                 DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
                 JTable table1 = new JTable(model1);
                 table1.setDefaultEditor(Object.class, null);                   ///kanei ton pinaka mi-editable
                 table1.setShowGrid(true);
                 table1.setShowVerticalLines(true);
                 table1.getTableHeader().setReorderingAllowed(false);
                 JScrollPane pane = new JScrollPane(table1);
                 pane.setVisible(true);
                 JFrame f1 = new JFrame("Customer_List");
                 JPanel panel1 = new JPanel();
                 panel1.add(pane);
                 f1.add(panel1);
                 f1.setSize(700, 150);
                 f1.setVisible(true);
                 initComponents();
                 Toolkit toolkit1=getToolkit();
                 Dimension size1= toolkit1.getScreenSize();
                 f1.setLocation(size1.width/2-getWidth()/2,size1.height/2-getHeight()/2);
                 f.setVisible(false);
                 
                 table1.addMouseListener(new MouseAdapter(){                    // mouseListener gia tin epilogi customer
                   public void mouseClicked(MouseEvent e2) {                    // kanei override tis public methodou
                  
                       if(e2.getClickCount() ==2)
                    {
                          JTable jtable1 = (JTable)e2.getSource(); 
                           int row= jtable1.getSelectedRow();
                           String c_id = (String)jtable1.getValueAt(row,0);
                        try{   
                            String sql2 = "delete from customer where customer_id=?";    //diagrafi apo ton pinaka customer
                           PreparedStatement pst2=con.prepareStatement(sql2); 
                           pst2.setString(1,c_id);
                           pst2.execute();
                           
                           JOptionPane.showMessageDialog(null,"Succesful deletion!");
                           con.close();}
                           
                            catch(Exception ex){
                             JOptionPane.showMessageDialog(null,ex);
                             }    
                    }
                   }});
                }  
                  else if(jtable.getSelectedRow()==1){                          // an epilegei na diagrapsei employee
                 String sql= "Select * from employee";          
                   PreparedStatement pst=con.prepareStatement(sql);
                   ResultSet rs= pst.executeQuery();
                   
                int count=0;
                 while(rs.next())
                 {count++;}
                 
                 rs= pst.executeQuery();       
                 String columns1[] = {"Employee_ID", "First_Name", "Last_Name","Email","Address_ID","Active", "Create_Date"};
                 String data1[][] = new String[count][7];
                
                 int i2=0;
                 while(rs.next()){
                  int id = rs.getInt("employee_id");
                  String name = rs.getString("first_name");
                  String l_name = rs.getString("last_name");
                  String mail = rs.getString("email");
                  int add_id = rs.getInt("address_id");
                  int act = rs.getInt("active");
                  String cr_date = rs.getString("create_date");
                  data1[i2][0] = id + "";
                  data1[i2][1] = name;
                  data1[i2][2] = l_name;
                  data1[i2][3] = mail;
                  data1[i2][4] = add_id + "";
                  data1[i2][5] = act + "";
                  data1[i2][6] = cr_date;
                  i2++;       
                 }
                 
                 DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
                 JTable table1 = new JTable(model1);
                 table1.setDefaultEditor(Object.class, null);                     ///kanei ton pinaka mi-editable
                 table1.setShowGrid(true);
                 table1.setShowVerticalLines(true);
                 table1.getTableHeader().setReorderingAllowed(false);
                 JScrollPane pane = new JScrollPane(table1);
                 pane.setVisible(true);
                 JFrame f1 = new JFrame("Employee_List");
                 JPanel panel1 = new JPanel();
                 panel1.add(pane);
                 f1.add(panel1);
                 f1.setSize(700, 150);
                 f1.setVisible(true);
                 initComponents();
                 Toolkit toolkit1=getToolkit();
                 Dimension size1= toolkit1.getScreenSize();
                 f1.setLocation(size1.width/2-getWidth()/2,size1.height/2-getHeight()/2);
                 f.setVisible(false);
                 
                 table1.addMouseListener(new MouseAdapter(){                    // mouseListener gia tin epilogi employee
                   public void mouseClicked(MouseEvent e2) {                    // kanei override tis public methodou
                  
                       if(e2.getClickCount() ==2)
                    {
                          JTable jtable1 = (JTable)e2.getSource(); 
                           int row= jtable1.getSelectedRow();
                           String e_id = (String)jtable1.getValueAt(row,0);
     
                        try{   
                            String sql2 = "delete from employee where employee_id=?";    //diagrafi apo ton pinaka employee
                           PreparedStatement pst2=con.prepareStatement(sql2); 
                           pst2.setString(1,e_id);
                           pst2.execute();
                           
                           JOptionPane.showMessageDialog(null,"Succesful deletion!");
                           con.close();}
                           
                            catch(Exception ex){
                             JOptionPane.showMessageDialog(null,ex);
                             }    
                    }
                   }});
                    
               }}}
            catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
                 }    
         }
         });
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }       
    }                                             

    
    private void changeaccounttypeActionPerformed(java.awt.event.ActionEvent evt) {                                                  
    try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");   
            
        String columns[] = {"Changes Available "};
        String data[][] = new String[2][1];
        data[0][0] = "Change Employee to Administrator";
        data[1][0] = "Change Administrator to Employee";
            
       DefaultTableModel model = new DefaultTableModel(data, columns); 
       JTable table = new JTable(model); 
       table.setDefaultEditor(Object.class, null);                               // kanei ton pinaka mi-editible
       table.getTableHeader().setReorderingAllowed(false);                       
       table.getColumnModel().getColumn(0).setPreferredWidth(200);
       table.setPreferredScrollableViewportSize(table.getPreferredSize());
       table.setShowGrid(true);
       table.setShowVerticalLines(true);
       JScrollPane pane = new JScrollPane(table);
       JFrame f = new JFrame("Select type of account change: ");
       JPanel panel = new JPanel();
       panel.add(pane);
       f.add(panel);
       f.setSize(400, 150);
       f.setVisible(true);
       initComponents();
       Toolkit toolkit=getToolkit();
       Dimension size= toolkit.getScreenSize();
       f.setLocation(size.width/2-getWidth()/4,size.height/2-getHeight()/3); 
       
        table.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
            try{
             if(e.getClickCount() ==2)
             {
               JTable jtable = (JTable)e.getSource();  
               if(jtable.getSelectedRow()==0){                                  // an epilegei na kanei employee admin
                   String sql= "Select * from employee";          
                   PreparedStatement pst=con.prepareStatement(sql);
                   ResultSet rs= pst.executeQuery();
                   
                int count=0;
                 while(rs.next())
                 {count++;}
                 
                 rs= pst.executeQuery();       
                 String columns1[] = {"Employee_ID", "First_Name", "Last_Name","Email","Address_ID","Active", "Create_Date"};
                 String data1[][] = new String[count][7];
                
                 int i2=0;
                 while(rs.next()){
                  int id = rs.getInt("employee_id");
                  String name = rs.getString("first_name");
                  String l_name = rs.getString("last_name");
                  String mail = rs.getString("email");
                  int add_id = rs.getInt("address_id");
                  int act = rs.getInt("active");
                  String cr_date = rs.getString("create_date");
                  data1[i2][0] = id + "";
                  data1[i2][1] = name;
                  data1[i2][2] = l_name;
                  data1[i2][3] = mail;
                  data1[i2][4] = add_id + "";
                  data1[i2][5] = act + "";
                  data1[i2][6] = cr_date;
                  i2++;       
                 }
                 
                 DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
                 JTable table1 = new JTable(model1);
                 table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
                 table1.setShowGrid(true);
                 table1.setShowVerticalLines(true);
                 table1.getTableHeader().setReorderingAllowed(false);
                 JScrollPane pane = new JScrollPane(table1);
                 pane.setVisible(true);
                 JFrame f1 = new JFrame("Employee_List");
                 JPanel panel1 = new JPanel();
                 panel1.add(pane);
                 f1.add(panel1);
                 f1.setSize(700, 150);
                 f1.setVisible(true);
                 initComponents();
                 Toolkit toolkit1=getToolkit();
                 Dimension size1= toolkit1.getScreenSize();
                 f1.setLocation(size1.width/2-getWidth()/2,size1.height/2-getHeight()/2);
                 f.setVisible(false);
                 
                 table1.addMouseListener(new MouseAdapter(){                    // mouseListener gia tin epilogi employee
                   public void mouseClicked(MouseEvent e2) {                    // kanei override tis public methodou
                  
                       if(e2.getClickCount() ==2)
                    {
                          JTable jtable1 = (JTable)e2.getSource(); 
                           int row= jtable1.getSelectedRow();
                           String e_id = (String)jtable1.getValueAt(row,0);
                           String e_name= (String)jtable1.getValueAt(row,1);
                           String e_l_name= (String)jtable1.getValueAt(row,2);
                           String e_mail= (String)jtable1.getValueAt(row,3);
                           String e_add_id= (String)jtable1.getValueAt(row,4);
                           String e_act= (String)jtable1.getValueAt(row,5);
                           String e_cr_date= (String)jtable1.getValueAt(row,6);
                        try{   
                            String sql2 = "delete from employee where employee_id=?";    //diagrafi apo ton pinaka employee
                           PreparedStatement pst2=con.prepareStatement(sql2); 
                           pst2.setString(1,e_id);
                           pst2.execute();
                            
                           String sql1 = "insert into `administrator` (`admin_id`, `first_name`, `last_name`,`email`,`address_id`,`active`,`create_date`) VALUES (?,?,?,?,?,?,?)";
                           PreparedStatement pst1=con.prepareStatement(sql1);  
                           pst1.setString(1,null);
                           pst1.setString(2,e_name);
                           pst1.setString(3, e_l_name);
                           pst1.setString(4,e_mail);
                           pst1.setString(5,e_add_id);
                           pst1.setString(6,e_act);
                           pst1.setString(7,e_cr_date);
                           pst1.execute();
                           
                           JOptionPane.showMessageDialog(null,"Succesful promotion!");
                           con.close();}
                           
                            catch(Exception ex){
                             JOptionPane.showMessageDialog(null,ex);
                             }    
                    }
                   }});
                    
                 
               }
               else if(jtable.getSelectedRow()==1){                             // an epilegei na kanei admin employee
                 String sql= "Select * from administrator";          
                   PreparedStatement pst=con.prepareStatement(sql);
                   ResultSet rs= pst.executeQuery();
                   
                int count=0;
                 while(rs.next())
                 {count++;}
                 
                 rs= pst.executeQuery();       
                 String columns1[] = {"Admin_ID", "First_Name", "Last_Name","Email","Address_ID","Active", "Create_Date"};
                 String data1[][] = new String[count][7];
                
                 int i2=0;
                 while(rs.next()){
                  int id = rs.getInt("admin_id");
                  String name = rs.getString("first_name");
                  String l_name = rs.getString("last_name");
                  String mail = rs.getString("email");
                  int add_id = rs.getInt("address_id");
                  int act = rs.getInt("active");
                  String cr_date = rs.getString("create_date");
                  data1[i2][0] = id + "";
                  data1[i2][1] = name;
                  data1[i2][2] = l_name;
                  data1[i2][3] = mail;
                  data1[i2][4] = add_id + "";
                  data1[i2][5] = act + "";
                  data1[i2][6] = cr_date;
                  i2++;       
                 }
                 
                 DefaultTableModel model1 = new DefaultTableModel(data1, columns1);
                 JTable table1 = new JTable(model1);
                 table1.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
                 table1.setShowGrid(true);
                 table1.setShowVerticalLines(true);
                 table1.getTableHeader().setReorderingAllowed(false);
                 JScrollPane pane = new JScrollPane(table1);
                 pane.setVisible(true);
                 JFrame f1 = new JFrame("Administrator_List");
                 JPanel panel1 = new JPanel();
                 panel1.add(pane);
                 f1.add(panel1);
                 f1.setSize(700, 150);
                 f1.setVisible(true);
                 initComponents();
                 Toolkit toolkit1=getToolkit();
                 Dimension size1= toolkit1.getScreenSize();
                 f1.setLocation(size1.width/2-getWidth()/2,size1.height/2-getHeight()/2);
                 f.setVisible(false);
                 
                 table1.addMouseListener(new MouseAdapter(){                    // mouseListener gia tin epilogi employee
                   public void mouseClicked(MouseEvent e2) {                    // kanei override tis public methodou
                  
                       if(e2.getClickCount() ==2)
                    {
                          JTable jtable1 = (JTable)e2.getSource(); 
                           int row= jtable1.getSelectedRow();
                           String e_id = (String)jtable1.getValueAt(row,0);
                           String e_name= (String)jtable1.getValueAt(row,1);
                           String e_l_name= (String)jtable1.getValueAt(row,2);
                           String e_mail= (String)jtable1.getValueAt(row,3);
                           String e_add_id= (String)jtable1.getValueAt(row,4);
                           String e_act= (String)jtable1.getValueAt(row,5);
                           String e_cr_date= (String)jtable1.getValueAt(row,6);
                        try{   
                            String sql2 = "delete from administrator where admin_id=?";    //diagrafi apo ton pinaka employee
                           PreparedStatement pst2=con.prepareStatement(sql2); 
                           pst2.setString(1,e_id);
                           pst2.execute();
                            
                           String sql1 = "insert into `employee` (`employee_id`, `first_name`, `last_name`,`email`,`address_id`,`active`,`create_date`) VALUES (?,?,?,?,?,?,?)";
                           PreparedStatement pst1=con.prepareStatement(sql1);  
                           pst1.setString(1,null);
                           pst1.setString(2,e_name);
                           pst1.setString(3, e_l_name);
                           pst1.setString(4,e_mail);
                           pst1.setString(5,e_add_id);
                           pst1.setString(6,e_act);
                           pst1.setString(7,e_cr_date);
                           pst1.execute();
                           
                           JOptionPane.showMessageDialog(null,"Succesful demotion!");
                           con.close();}
                           
                            catch(Exception ex){
                             JOptionPane.showMessageDialog(null,ex);
                             }    
                    }
                   }});
                    
               }}
               }
            catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
                 }    
              }
           
         });
       
       
            
         
         }
         catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }    
    }                                                 

    private void showmonthlyincomeActionPerformed(java.awt.event.ActionEvent evt) {                                                  
     try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand", "root","abc");   
            
        String columns[] = {"Jan.", "Feb.", "March", "April", "May","June","July","Aug.","Sep.","Oct.","Nov.","Dec."};
        String data[][] = new String[1][12];
        for(int i=1;i<13;i++){                                                  // briskei sinolika esoda apo tainies
                   String sql= "Select sum(amount) from film_payment where month(payment_date)=?"; 
                   PreparedStatement pst=con.prepareStatement(sql);
                   pst.setString(1,i+"");
                   ResultSet rs= pst.executeQuery();
                   rs.next();
                   float temp_sum = rs.getFloat("sum(amount)");
                   data[0][i-1]= temp_sum+"";}
        
                 DefaultTableModel model = new DefaultTableModel(data, columns);
                 JTable table = new JTable(model);
                 table.setDefaultEditor(Object.class, null);                              ///kanei ton pinaka mi-editable
                 table.setShowGrid(true);
                 table.setShowVerticalLines(true);
                 table.getTableHeader().setReorderingAllowed(false);
                 table.setPreferredScrollableViewportSize(table.getPreferredSize());
                 JScrollPane pane = new JScrollPane(table);
                 pane.setVisible(true);
                 JFrame f = new JFrame("Total_Monthly_Income_from_Films");
                 JPanel panel = new JPanel();
                 panel.add(pane);
                 f.add(panel);
                 f.setSize(950, 150);
                 f.setVisible(true);
                 initComponents();
                 Toolkit toolkit=getToolkit();
                 Dimension size= toolkit.getScreenSize();
                 f.setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
                 
                for(int i=1;i<13;i++){                                          //briskei sinolika esoda apo seires
                   String sql1= "Select sum(amount) from series_payment where month(payment_date)=?"; 
                   PreparedStatement pst1=con.prepareStatement(sql1);
                   pst1.setString(1,i+"");
                   ResultSet rs1= pst1.executeQuery();
                   rs1.next();
                   float temp_sum = rs1.getFloat("sum(amount)");
                   data[0][i-1]= temp_sum+"";}
                
                 DefaultTableModel model1 = new DefaultTableModel(data, columns);
                 JTable table1 = new JTable(model1);
                 table1.setDefaultEditor(Object.class, null);                        ///kanei ton pinaka mi-editable
                 table1.setShowGrid(true);
                 table1.setShowVerticalLines(true);
                 table1.getTableHeader().setReorderingAllowed(false);
                 table1.setPreferredScrollableViewportSize(table1.getPreferredSize());
                 JScrollPane pane1 = new JScrollPane(table1);
                 pane1.setVisible(true);
                 JFrame f1 = new JFrame("Total_Monthly_Income_from_Series");
                 JPanel panel1 = new JPanel();
                 panel1.add(pane1);
                 f1.add(panel1);
                 f1.setSize(950, 150);
                 f1.setVisible(true);
                 initComponents();
                 Toolkit toolkit1=getToolkit();
                 Dimension size1= toolkit1.getScreenSize();
                 f1.setLocation(size1.width/2-getWidth()/2,size1.height/2-getHeight()/5);
                 
        }
         catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }     
        
    }                                                 

    private void changerentalpriceActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tvondemand?allowMultiQueries=true", "root","abc");   
            
        String columns[] = {"Available Subscription Types "};
        String data[][] = new String[3][1];
        data[0][0] = "M";
        data[1][0] = "MS";
        data[2][0] = "S";
            
       DefaultTableModel model = new DefaultTableModel(data, columns); 
       JTable table = new JTable(model); 
       table.setDefaultEditor(Object.class, null);                               // kanei ton pinaka mi-editible
       table.getTableHeader().setReorderingAllowed(false);                       
       table.getColumnModel().getColumn(0).setPreferredWidth(200);
       table.setPreferredScrollableViewportSize(table.getPreferredSize());
       table.setShowGrid(true);
       table.setShowVerticalLines(true);
       JScrollPane pane = new JScrollPane(table);
       JFrame f = new JFrame("Select type of price to change: ");
       JPanel panel = new JPanel();
       panel.add(pane);
       f.add(panel);
       f.setSize(400, 150);
       f.setVisible(true);
       initComponents();
       Toolkit toolkit=getToolkit();
       Dimension size= toolkit.getScreenSize();
       f.setLocation(size.width/2-getWidth()/4,size.height/2-getHeight()/3); 
       
        table.addMouseListener(new MouseAdapter(){
         public void mouseClicked(MouseEvent e) {                               // kanei override tis public methodou
            try{
             if(e.getClickCount() ==2)
             {
               JTable jtable = (JTable)e.getSource();  
            if(jtable.getSelectedRow()==0){                                     // epilogi tainies 
                f.setVisible(false);   
                String price= JOptionPane.showInputDialog(null, "Enter new film price (in euros): ");                                                             
               
                String sqlf = "update price set amount=-1 where price_id=1";    // akiro update pou tha entopistei kai tha mplokaristei apo ton trigger gia na enimerwrthei o log
                PreparedStatement pstf=con.prepareStatement(sqlf);
                
                if(price==null)                                                 // an patithei to "cancel" i to "x"
                 {JOptionPane.showMessageDialog(null,"Cancelling update!");}
                else if(price.length()==0)                                      // an patithei to "ok" xvris na exei dothei timi
                 {JOptionPane.showMessageDialog(null,"No input given, unsuccesful update!");
                  pstf.execute();}                                          
                else if(Double.parseDouble(price) <0)                           // an dothei arnitiki timi
                 {JOptionPane.showMessageDialog(null,"Price can't be negative, unsuccesful update!");
                  pstf.execute();}                                           
                else{                                                           // gia swsti eisodo (dld arithmo >=0)
                    String sql= "update price set amount=? where price_id=1";
                    PreparedStatement pst=con.prepareStatement(sql);
                    pst.setString(1,price);
                    pst.execute();
                    JOptionPane.showMessageDialog(null,"Succesful update!");
                }
                }
            
            else if(jtable.getSelectedRow()==1){                                // epilogi tainies kai seires
              
               String columns1[] = {"Available Subscription Types "};
               String data1[][] = new String[2][1];
               data1[0][0] = "M";
               data1[1][0] = "S";
               
               f.setVisible(false);
                DefaultTableModel model1 = new DefaultTableModel(data1, columns1); 
      JTable table1 = new JTable(model1); 
      table1.setDefaultEditor(Object.class, null);                               // kanei ton pinaka mi-editible
      table1.getTableHeader().setReorderingAllowed(false);                       
      table1.setPreferredScrollableViewportSize(table1.getPreferredSize());
      table1.setShowGrid(true);
      table1.setShowVerticalLines(true);
      JScrollPane pane1 = new JScrollPane(table1);
      JFrame f1 = new JFrame("Select type of price to change:");
      JPanel panel1 = new JPanel();
      panel1.add(pane1);
      f1.add(panel1);
      f1.setSize(400, 150);
      f1.setVisible(true);
       initComponents();
        Toolkit toolkit1=getToolkit();
        Dimension size1= toolkit1.getScreenSize();
        f1.setLocation(size1.width/2-getWidth()/4,size1.height/2-getHeight()/3); 

            table1.addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent e2) {                            // kanei override tis public methodou
            try{
             if(e2.getClickCount()==2)
             {
            JTable jtable1 = (JTable)e2.getSource();  
            if(jtable1.getSelectedRow()==0){                                     // epilogi tainies 
             String price= JOptionPane.showInputDialog(null, "Enter new film price (in euros): ");                                                             
               
                String sqlf = "update price set amount=-1 where price_id=3";    // akiro update pou tha entopistei kai tha mplokaristei apo ton trigger gia na enimerwrthei o log
                PreparedStatement pstf=con.prepareStatement(sqlf);
                
                if(price==null)                                                 // an patithei to "cancel" i to "x"
                 {}
                else if(price.length()==0)                                      // an patithei to "ok" xvris na exei dothei timi
                 {JOptionPane.showMessageDialog(null,"No input given, unsuccesful update!");
                  pstf.execute();}                                          
                else if(Double.parseDouble(price) <0)                           // an dothei arnitiki timi
                 {JOptionPane.showMessageDialog(null,"Price can't be negative, unsuccesful update!");
                  pstf.execute();}                                           
                else{                                                           // gia swsti eisodo (dld arithmo >=0)
                    String sql= "update price set amount=? where price_id=3";
                    PreparedStatement pst=con.prepareStatement(sql);
                    pst.setString(1,price);
                    pst.execute();
                    JOptionPane.showMessageDialog(null,"Succesful update!");
            }}
            else if(jtable1.getSelectedRow()==1){                                // epilogi seires
                String price= JOptionPane.showInputDialog(null, "Enter new series price (in euros): ");                                                             
               
                String sqlf = "update price set amount=-1 where price_id=4";    // akiro update pou tha entopistei kai tha mplokaristei apo ton trigger gia na enimerwrthei o log
                PreparedStatement pstf=con.prepareStatement(sqlf);
                
                if(price==null)                                                 // an patithei to "cancel" i to "x"
                 {}
                else if(price.length()==0)                                      // an patithei to "ok" xvris na exei dothei timi
                 {JOptionPane.showMessageDialog(null,"No input given, unsuccesful update!");
                  pstf.execute();}                                          
                else if(Double.parseDouble(price) <0)                           // an dothei arnitiki timi
                 {JOptionPane.showMessageDialog(null,"Price can't be negative, unsuccesful update!");
                  pstf.execute();}                                           
                else{                                                           // gia swsti eisodo (dld arithmo >=0)
                    String sql= "update price set amount=? where price_id=4";
                    PreparedStatement pst=con.prepareStatement(sql);
                    pst.setString(1,price);
                    pst.execute();
                    JOptionPane.showMessageDialog(null,"Succesful update!");
            }
              
             }}}
            catch(Exception ex){
              JOptionPane.showMessageDialog(null,ex);    
           }}
            });
            }
            
            else if(jtable.getSelectedRow()==2){                                // epilogi seires
              f.setVisible(false);   
                String price= JOptionPane.showInputDialog(null, "Enter new series price (in euros): ");                                                             
               
                String sqlf = "update price set amount=-1 where price_id=2";    // akiro update pou tha entopistei kai tha mplokaristei apo ton trigger gia na enimerwrthei o log
                PreparedStatement pstf=con.prepareStatement(sqlf);
                
                if(price==null)                                                 // an patithei to "cancel" i to "x"
                 {}
                else if(price.length()==0)                                      // an patithei to "ok" xvris na exei dothei timi
                 {JOptionPane.showMessageDialog(null,"No input given, unsuccesful update!");
                  pstf.execute();}                                          
                else if(Double.parseDouble(price) <0)                           // an dothei arnitiki timi
                 {JOptionPane.showMessageDialog(null,"Price can't be negative, unsuccesful update!");
                  pstf.execute();}                                           
                else{                                                           // gia swsti eisodo (dld arithmo >=0)
                    String sql= "update price set amount=? where price_id=2";
                    PreparedStatement pst=con.prepareStatement(sql);
                    pst.setString(1,price);
                    pst.execute();
                    JOptionPane.showMessageDialog(null,"Succesful update!");
                }  
            }   
               
               }  
             }
            
             catch(Exception ex){
             JOptionPane.showMessageDialog(null,ex);
           }}     
         
         });
         }
       catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }        
    }                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton changeaccounttype;
    private javax.swing.JButton changerentalprice;
    private javax.swing.JButton createaccount;
    private javax.swing.JButton deleteaccount;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton logout1;
    private javax.swing.JButton showmonthlyincome;
    // End of variables declaration                   
}

